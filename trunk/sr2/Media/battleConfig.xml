<setup>
    <![CDATA[
    println("Setup");
	]]>
</setup>
<onWon>
    <![CDATA[
	require("Media/Scripts/functions.steel");
	println("A winner is you");
	declare @monsters = battle::getCharacterGroup(true); // Get monsters
	declare @characters = battle::getCharacterGroup(false); // Get characters
	declare @xp_gain;
        declare @sp_gain;
	declare @original_level; 
	const $B = 10; // How many equal-level monsters to defeat to gain a level
	const $b = 1.12; // At 1.07, a character 10 levels higher than you is worth double the XP
	foreach (declare $character) in @characters {
	    declare $total_xp = 0;
            declare $total_sp = 0;
            if(getCharacterToggle($character,$_ALIVE)){
                foreach (declare $monster) in @monsters {
                    declare $char_level = getCharacterLevel($character);
                    declare $monster_level = getCharacterLevel($monster);
	
                    declare $xp = ((tnl($char_level + 1) - tnl($char_level)) /  $B) * ($b ^ ($monster_level - $char_level));
                    $xp *= getCharacterAttribute($character,$_JOY);
                    $total_xp = $total_xp + $xp;
                    $total_sp += getMonsterSPReward($monster);
                }
            }
	    $total_xp = math::ceil($total_xp);
	    
	    println ( "{getCharacterName($character)} got {$total_xp}" );
	    @xp_gain += $total_xp;
	    @original_level += getCharacterLevel($character); 
            @sp_gain += $total_sp;
	    addExperience($character,$total_xp);
            setCharacterSP($character,getCharacterSP($character)+$total_sp);
	}
	battle::darkColor(0.0,0.0,0.0,0.9);
	battle::darkMode($_FINAL_DRAW);
	showExperience(@characters,@xp_gain,@original_level, @sp_gain);
	declare $winnings = 0;
        declare @drops;
	const $winningsPerLevel = 5;
	const $winningsGrowth = 1.15;
	foreach (declare $monster) in @monsters {
            declare @these_drops = getMonsterDrops($monster);
            if(len(@these_drops)){
                @drops += @these_drops;
            }else {
                $winnings += $winningsPerLevel * ($b ^ getCharacterLevel($monster));                    
            }
	}
        $winnings = integer($winnings);
        // Give money, or extra drops?
        if(math::randf() > 0.5){
            giveGold($winnings);
            say("Gold", "You find {$winnings} Gold.");
        }else{
            declare $rarity = $_DROP_COMMON;
            declare $r = math::randf();
            if($rarity > 0.9)
                $rarity = $_DROP_RARE;
            else if($rarity > 0.7)
                $rarity = $_DROP_UNCOMMON;
            declare $item = randomItem($rarity,$winnings,$winnings * (0.5 + $r));
            if(is_valid($item))
                push @drops, $item;
        }
        foreach (declare $drop) in @drops {
            giveItem($drop,1,false);
        }
	]]>
</onWon>
<onLost>
    <![CDATA[
    println("Lost");
	gameoverScreen();
	closeMap();
	]]>
</onLost>