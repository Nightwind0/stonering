<!ELEMENT level (levelHeader, tiles, mappableObjects?)>
<!ELEMENT levelHeader EMPTY>
<!ELEMENT tiles (tile+)>
<!ELEMENT mappableObjects (mo+)>
<!ELEMENT tile ((tilemap | spriteRef),condition?, attributeModifier?, directionBlock?)>
<!ELEMENT tilemap EMPTY>
<!ELEMENT directionBlock EMPTY>
<!ELEMENT spriteRef (#PCDATA)>
<!ELEMENT condition ((operator|hasGold|hasItem|didEvent)*)>
<!ELEMENT attributeModifier (condition*)>
<!ELEMENT operator ((and | or)*)>
<!ELEMENT and ((hasGold|hasItem|didEvent|operator)*)>
<!ELEMENT or ((hasGold|hasItem|didEvent|operator)*)>
<!ELEMENT hasGold (#PCDATA)>
<!ELEMENT hasItem (itemRef)>
<!ELEMENT itemRef (namedItemRef|weaponRef|armorRef)>
<!ELEMENT namedItemRef (#PCDATA)>
<!ELEMENT didEvent (#PCDATA)>
<!ELEMENT mo ((tilemap|spriteRef*)?,condition?, event*, movement?)>
<!ELEMENT event (condition?,(attributeModifier | say | give | take | playAnimation | playSound | loadLevel | startBattle | pause | invokeShop | giveGold | choice)*)>
<!ELEMENT say (#PCDATA)>
<!ELEMENT give (itemRef)> <!-- Note: This CHANGED! -->
<!ELEMENT take (itemRef)> <!-- Note: This CHANGED! -->
<!ELEMENT giveGold EMPTY>
<!ELEMENT playAnimation (#PCDATA)>
<!ELEMENT playSound (#PCDATA)>
<!ELEMENT loadLevel EMPTY>
<!ELEMENT startBattle EMPTY>
<!ELEMENT invokeShop EMPTY>
<!ELEMENT pause (#PCDATA)>
<!ELEMENT movement EMPTY>
<!ELEMENT choice (option+)>
<!ELEMENT option (condition?, (attributeModifier | say | give | take | playAnimation | playSound | loadLevel | startBattle | pause | invokeShop | giveGold | choice)*)>


<!-- Item DTD -->
<!ELEMENT iconRef (#PCDATA)>
<!ELEMENT weaponClasses (weaponClass+)>
<!ELEMENT weaponTypes   (weaponType+)>
<!ELEMENT armorClasses  (armorClass+)>
<!ELEMENT armorTypes    (armorType+)>
<!ELEMENT items (weaponClasses,weaponTypes, armorClasses, armorTypes,itemList)>
<!ELEMENT itemList (namedItem+)>
<!ELEMENT weaponRef (weaponTypeRef, weaponClassRef, (spellRef|runeType)?)>
<!ELEMENT armorRef (armorTypeRef, armorClassRef, (spellRef|runeType)?)>
<!ELEMENT namedItem (iconRef,(regularItem | uniqueWeapon | uniqueArmor | rune | specialItem | systemItem))>
<!ELEMENT regularItem ((attributeModifier | say | give | take | playAnimation | playSound | loadLevel | startBattle | pause | invokeShop | giveGold | choice)*)>
<!ELEMENT uniqueWeapon (weaponTypeRef, weaponEnhancer*, statusEffectModifier*,attributeEnhancer*,  (spellRef|runeType)?)>
<!ELEMENT uniqueArmor   (armorTypeRef, armorEnhancer*, statusEffectModifier*, attributeEnhancer*, (spellRef|runeType)?)>
<!ELEMENT rune (spellRef)>
<!ELEMENT specialItem EMPTY>
<!ELEMENT systemItem EMPTY>
<!ELEMENT runeType EMPTY>
<!ELEMENT weaponTypeRef (#PCDATA)>
<!ELEMENT armorTypeRef (#PCDATA)>
<!ELEMENT weaponClassRef (#PCDATA)>
<!ELEMENT armorClassRef (#PCDATA)>
<!ELEMENT weaponClass (attributeEnhancer*, weaponEnhancer*,statusEffectModifier*, weaponTypeExclusionList?)>
<!ELEMENT armorClass  (attributeEnhancer*, armorEnhancer*, statusEffectModifier*, armorTypeExclusionList?)>
<!ELEMENT armorType (iconRef)>
<!ELEMENT weaponType ((weaponDamageCategory|magicDamageCategory),iconRef)>
<!ELEMENT weaponEnhancer EMPTY>
<!ELEMENT armorEnhancer EMPTY>
<!ELEMENT statusEffectModifier EMPTY>
<!ELEMENT attributeEnhancer EMPTY> <!-- Similar to attributeModifier, but a temporary bonus when item is equipped. -->
<!ELEMENT weaponTypeExclusionList (weaponTypeRef*)>
<!ELEMENT armorTypeExclusionList (armorTypeRef*)>

<!-- Spell DTD -->
<!ELEMENT spellRef (#PCDATA)>
<!ELEMENT spellList (spell+)>
<!ELEMENT doWeaponDamage (weaponDamageCategory)>
<!ELEMENT doMagicDamage  (magicDamageCategory)>
<!ELEMENT doStatusEffect EMPTY>
<!ELEMENT spell (magicAbsorb?,(animation|doWeaponDamage|doMagicDamage|doStatusEffect)*)> 
<!ELEMENT weaponDamageCategory EMPTY>
<!ELEMENT magicDamageCategory EMPTY>
<!ELEMENT magicResistance EMPTY>


<!-- Animation DTD -->
<!ELEMENT animation (par+)>
<!ELEMENT par (playSound?,animationSpriteRef*)> <!-- If there are no animationSprites then its treated like a pause -->
<!ELEMENT animationSpriteRef (#PCDATA)>

<!-- Status Effect DTD -->
<!ELEMENT statusEffectList (statusEffect*)>
<!ELEMENT statusEffect (onInvoke?,onRound?,onCountdown?,onRemove?)>
<!ELEMENT attributeEffect EMPTY> <!-- Like a simplified attributeModifier. Only works on the current user. -->
<!-- These guys are all Effect type. -->
<!-- Notice that you can have a status effect that causes other status effects! -->
<!ELEMENT onInvoke (attributeEffect|doMagicDamage|doWeaponDamage|doStatusEffect|animation)*> 
<!ELEMENT onRound (attributeEffect|doMagicDamage|doWeaponDamage|doStatusEffect|animation)*>
<!ELEMENT onCountdown (attributeEffect|doMagicDamage|doWeaponDamage|doStatusEffect|animation)*>
<!ELEMENT onRemove (attributeEffect|doMagicDamage|doWeaponDamage|doStatusEffect|animation)*>

<!-- Character Class DTD -->
<!ELEMENT characterClass (weaponTypeRef*, armorTypeRef*,startingStat*,statIncrease*,skillRef*)>
<!ELEMENT characterClasses (characterClass+)>
<!ELEMENT statIncrease EMPTY>
<!ELEMENT startingStat EMPTY>
<!ELEMENT skill (prereqSkillRef*,(animation|doWeaponDamage|doMagicDamage|doStatusEffect)*)>
<!ELEMENT skillList (skill)+>
<!ELEMENT prereqSkillRef EMPTY>
<!ELEMENT skillRef EMPTY>

<!-- Attributes -->

<!ATTLIST level name CDATA #REQUIRED>
<!ATTLIST levelHeader music CDATA #REQUIRED>
<!ATTLIST levelHeader width CDATA #REQUIRED>
<!ATTLIST levelHeader height CDATA #REQUIRED>
<!ATTLIST levelHeader allowsRunning (true|false) #IMPLIED>
<!ATTLIST tile name CDATA #REQUIRED>
<!ATTLIST tile xpos CDATA #REQUIRED>
<!ATTLIST tile ypos CDATA #REQUIRED>
<!ATTLIST tile zorder CDATA #IMPLIED>
<!ATTLIST tile hot (true|false) #IMPLIED>
<!ATTLIST tile floater (true|false) #IMPLIED>
<!ATTLIST tilemap mapname CDATA #REQUIRED>
<!ATTLIST tilemap mapx CDATA #REQUIRED>
<!ATTLIST tilemap mapy CDATA #REQUIRED>
<!ATTLIST mo name CDATA #REQUIRED>
<!ATTLIST mo type (npc|square|container|warp|door) #REQUIRED>
<!ATTLIST mo xpos CDATA #REQUIRED>
<!ATTLIST mo ypos CDATA #REQUIRED>
<!ATTLIST mo size (small|medium|large|tall|wide) #REQUIRED>
<!ATTLIST mo solid (true|false) #IMPLIED>
<!ATTLIST movement movementType (none|wander|paceNS|paceEW) #REQUIRED>
<!ATTLIST movement speed (slow|medium|fast) #IMPLIED>
<!ATTLIST event name CDATA #REQUIRED>
<!ATTLIST event repeatable (true|false) #IMPLIED> 
<!ATTLIST event remember (true|false) #IMPLIED>
<!ATTLIST event triggerType (talk|step|act) #REQUIRED>
<!ATTLIST say speaker CDATA #REQUIRED>
<!ATTLIST give count CDATA #IMPLIED>
<!ATTLIST take count CDATA #IMPLIED>
<!ATTLIST giveGold count CDATA #REQUIRED>
<!ATTLIST namedItemRef itemType (item|weapon|armor|rune|special|system)  #REQUIRED>
<!ATTLIST loadLevel name CDATA #REQUIRED>
<!ATTLIST loadLevel startx CDATA #REQUIRED>
<!ATTLIST loadLevel starty CDATA #REQUIRED>
<!ATTLIST startBattle monster CDATA #REQUIRED>
<!ATTLIST startBattle count CDATA #IMPLIED>
<!ATTLIST startBattle isBoss CDATA #IMPLIED>
<!ATTLIST invokeShop shopType CDATA #REQUIRED>
<!ATTLIST hasGold operator (lt|gt|lte|gte|eq) #REQUIRED>
<!ATTLIST hasGold not (true) #IMPLIED>
<!ATTLIST hasItem not (true) #IMPLIED>
<!ATTLIST hasItem count CDATA #IMPLIED>
<!ATTLIST didEvent not (true) #IMPLIED>
<!ATTLIST attributeModifier attribute CDATA #REQUIRED>
<!ATTLIST attributeModifier add CDATA #IMPLIED>
<!ATTLIST attributeModifier changeTo (max|min|add) #REQUIRED>
<!ATTLIST attributeModifier target (current|all|caster|common) #IMPLIED>
<!ATTLIST directionBlock north (true|false) #REQUIRED>
<!ATTLIST directionBlock south (true|false) #REQUIRED>
<!ATTLIST directionBlock east (true|false) #REQUIRED>
<!ATTLIST directionBlock west (true|false) #REQUIRED>
<!ATTLIST spriteRef type (still|twoway|fourway) #IMPLIED>
<!ATTLIST choice text CDATA #REQUIRED>
<!ATTLIST option text CDATA #REQUIRED>
<!ATTLIST namedItem name CDATA #REQUIRED>
<!ATTLIST namedItem maxInventory CDATA #IMPLIED>
<!ATTLIST namedItem dropRarity (never|rare|uncommon|common) #REQUIRED>
<!ATTLIST regularItem value CDATA #REQUIRED>
<!ATTLIST regularItem sellValueMultiplier CDATA #IMPLIED>
<!ATTLIST regularItem reusable (true|false) #REQUIRED>
<!ATTLIST regularItem targetable (all|single|either|self-only) #REQUIRED>
<!ATTLIST regularItem use (battle|world|both) #REQUIRED>
<!ATTLIST regularItem defaultTarget (party|monsters) #IMPLIED>
<!ATTLIST uniqueArmor valueMultiplier CDATA #REQUIRED>
<!ATTLIST uniqueWeapon valueMultiplier CDATA #REQUIRED>
<!ATTLIST weaponClass name CDATA #REQUIRED>
<!ATTLIST weaponClass valueMultiplier CDATA #REQUIRED>
<!ATTLIST weaponClass valueAdd  CDATA #IMPLIED>
<!ATTLIST weaponType name CDATA #REQUIRED>
<!ATTLIST weaponType basePrice CDATA #REQUIRED>
<!ATTLIST weaponType baseAttack CDATA #REQUIRED> 
<!ATTLIST weaponType baseHit CDATA #REQUIRED> <!-- In percent 0-1 float-->
<!ATTLIST weaponType baseCritical CDATA #IMPLIED> <!-- In percent. Default = "0.05" -->
<!ATTLIST weaponType ranged (true|false) #IMPLIED>
<!ATTLIST weaponType twoHanded (true|false) #IMPLIED>
<!ATTLIST armorClass name CDATA #REQUIRED>
<!ATTLIST armorClass valueMultiplier CDATA #REQUIRED>
<!ATTLIST armorClass valueAdd  CDATA #IMPLIED>
<!ATTLIST armorType name CDATA #REQUIRED>
<!ATTLIST armorType basePrice CDATA #REQUIRED>
<!ATTLIST armorType baseArmorClass CDATA #REQUIRED> 
<!ATTLIST armorType baseResist CDATA #REQUIRED>
<!ATTLIST armorType slot (head|body|shield|feet|hands) #REQUIRED>
<!ATTLIST attributeEnhancer attribute CDATA #REQUIRED>
<!ATTLIST attributeEnhancer add  CDATA #REQUIRED>
<!ATTLIST attributeEnhancer multiplier CDATA #IMPLIED>
<!ATTLIST runeType type (none|rune|ultraRune) #REQUIRED>
<!ATTLIST weaponEnhancer attribute CDATA #REQUIRED>
<!ATTLIST weaponEnhancer add CDATA #IMPLIED>
<!ATTLIST weaponEnhancer multiplier CDATA #IMPLIED>
<!ATTLIST armorEnhancer  attribute CDATA #REQUIRED>
<!ATTLIST armorEnhancer add CDATA #IMPLIED>
<!ATTLIST armorEnhancer multiplier CDATA #IMPLIED>
<!ATTLIST statusEffectModifier statusRef CDATA #REQUIRED>
<!-- For a weapon, this is a chance of inflicting the status from 0 to 1. -->
<!-- For armor it is the percentage chance of blocking the status referenced -->
<!ATTLIST statusEffectModifier modifier CDATA #REQUIRED>  
<!ATTLIST spellRef type (elemental|white|status|other) #REQUIRED>
<!ATTLIST animation name CDATA #REQUIRED>
<!ATTLIST animation type (battle|world) #REQUIRED>
<!ATTLIST par duration CDATA #REQUIRED>
<!ATTLIST par hide (none|caster|caster_group|target|target_group|all) #IMPLIED> <!-- Defaults to none --> 
<!ATTLIST animationSpriteRef initialFocus (screen|caster|target) #REQUIRED>
<!ATTLIST animationSpriteRef initialFocusType (center|above|below|left|right|below_right|below_left|above_right|above_left) #IMPLIED> <!-- Center is default -->
<!ATTLIST animationSpriteRef movementDirection (still|n|e|s|w|ne|nw|se|sw|toTarget|toCaster) #IMPLIED>
<!ATTLIST animationSpriteRef movementStyle (straight|arc_over|arc_under|sine) #IMPLIED> <!-- Defaults to straight -->
<!-- Note: movement speed will be determined by the amount of pixels that need to be covered and the duration of the par -->
<!-- So that if the par duration is three seconds, the sprite will move to its destination in three seconds -->
<!ATTLIST spell name CDATA #REQUIRED>
<!ATTLIST spell type (elemental|white|status|other) #REQUIRED>
<!ATTLIST spell use (battle|world|both) #REQUIRED>
<!ATTLIST spell targetable (all|single|either|self-only) #REQUIRED>
<!ATTLIST spell appliesToWeapons (true|false) #IMPLIED> <!-- Used in generation of random weapons? Defaults to false -->
<!ATTLIST spell appliesToArmor   (true|false) #IMPLIED> <!-- Used in generation of random armor? Defaults to false -->
<!ATTLIST spell mp CDATA #REQUIRED>
<!ATTLIST spell value CDATA #REQUIRED>
<!ATTLIST weaponDamageCategory type (slash|bash|jab) #REQUIRED>
<!ATTLIST magicDamageCategory type (fire|water|earth|wind|holy|other) #REQUIRED>
<!ATTLIST doWeaponDamage baseAttack CDATA #REQUIRED>
<!ATTLIST doWeaponDamage baseCritical CDATA #REQUIRED>
<!ATTLIST doWeaponDamage baseHit  CDATA #REQUIRED> <!-- 0 to 1 floating point-->
<!ATTLIST doWeaponDamage ranged (true|false) #IMPLIED> <!-- Defaults to false -->
<!ATTLIST doMagicDamage  baseDamage CDATA #REQUIRED>
<!ATTLIST doMagicDamage  baseHit    CDATA #REQUIRED>
<!ATTLIST doMagicDamage  drain    (true|false) #IMPLIED> <!-- Defaults to false. Causes any target damage to be added to the caster -->
<!ATTLIST doMagicDamage  piercing (true|false) #IMPLIED> <!-- Ignore hit chance. Definitely hits -->
<!ATTLIST doMagicDamage  damageAttribute (hp|mp) #IMPLIED> <!-- Default is hp -->
<!ATTLIST doStatusEffect statusRef CDATA #REQUIRED>
<!ATTLIST doStatusEffect chance CDATA #REQUIRED> <!-- 0 to 1 floating point. -->

<!ATTLIST attributeEffect attribute CDATA #REQUIRED>
<!ATTLIST attributeEffect add CDATA #IMPLIED> <!-- Implied as 0 -->
<!ATTLIST attributeEffect changeTo (max|min|add|multiplier|multiplier_add) #REQUIRED>
<!ATTLIST attributeEffect multiplier CDATA #IMPLIED> <!-- Implied as 1 -->
<!-- Note that, while removeStatus does obey the 'chance' parameter, it ignores any status effect resistances of the target. -->
<!-- Therefore, a removeStatus for poison with 80% really does remove poison 80% of the time. Whereas, when inflicting the status (con'td) -->
<!-- You have the chance as well as the target's resistances to account for -->
<!ATTLIST doStatusEffect removeStatus (true|false) #IMPLIED> <!-- Default is false. In order to have a spell/skill that removes a status, set this to true -->
<!ATTLIST magicResistance resist CDATA #REQUIRED>
<!ATTLIST magicResistance type (fire|water|earth|wind|holy|elemental|all) #REQUIRED>

<!ATTLIST statusEffect name CDATA #REQUIRED>
<!ATTLIST statusEffect last (battle|round_count|permanent) #REQUIRED>
<!ATTLIST statusEffect lengthMultiplier CDATA #IMPLIED>
<!ATTLIST statusEffect roundCount CDATA #IMPLIED> 

<!ATTLIST characterClass name CDATA #REQUIRED>
<!ATTLIST characterClass gender (male|female|either) #IMPLIED> <!-- Defaults to either -->
<!ATTLIST statIncrease stat (hp_max|mp_max|str|dex|evd|mag|rst|spr) #REQUIRED>
<!ATTLIST statIncrease period CDATA #REQUIRED> <!-- Numeric integer. 1,2,3,4,5.... Or 0 -->
<!ATTLIST statIncrease increment CDATA #REQUIRED> <!-- Numeric integer -->
<!ATTLIST startingStat stat (hp_max|mp_max|str|dex|evd|mag|rst|spr) #REQUIRED>
<!ATTLIST startingStat value CDATA #REQUIRED> <!-- Numeric integer -->
<!ATTLIST skill name CDATA #REQUIRED>
<!ATTLIST skill sp CDATA #REQUIRED> <!-- Skill points to earn skill -->
<!ATTLIST skill bp CDATA #REQUIRED> <!-- Percentage of 'Break' to use skill --> 
<!ATTLIST prereqSkillRef skillName CDATA #REQUIRED>
<!ATTLIST skillRef skillName CDATA #REQUIRED>
