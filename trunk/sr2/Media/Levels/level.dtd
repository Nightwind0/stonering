<!ELEMENT level (levelHeader, tiles, mappableObjects?)>
<!ELEMENT levelHeader (script?)>
<!ELEMENT tiles (tile+)>
<!ELEMENT mappableObjects (mo+)>
<!ELEMENT tile ((tilemap | spriteRef),conditionScript?, onStep?, directionBlock?)>
<!ELEMENT tilemap EMPTY>
<!ELEMENT directionBlock EMPTY>
<!ELEMENT spriteRef (#PCDATA)>
<!ELEMENT script (#PCDATA)>
<!ELEMENT conditionScript (#PCDATA)>
<!ELEMENT onStep (script)>
<!ELEMENT onEquip (script)>
<!ELEMENT onUnequip (script)>
<!ELEMENT itemRef (namedItemRef|weaponRef|armorRef)>
<!ELEMENT namedItemRef (#PCDATA)>
<!ELEMENT mo ((tilemap|spriteRef*)?,conditionScript?, event*, movement?)>
<!ELEMENT event (conditionScript?, script?)>
<!ELEMENT movement (script?)>

<!-- Item DTD -->
<!ELEMENT iconRef (#PCDATA)>
<!ELEMENT weaponClasses (weaponClass+)>
<!ELEMENT weaponTypes   (weaponType+)>
<!ELEMENT armorClasses  (armorClass+)>
<!ELEMENT armorTypes    (armorType+)>
<!ELEMENT items (weaponClasses,weaponTypes, armorClasses, armorTypes,itemList)>
<!ELEMENT itemList (namedItem+)>
<!ELEMENT weaponRef (weaponTypeRef, weaponClassRef, (spellRef|runeType)?)>
<!ELEMENT armorRef (armorTypeRef, armorClassRef, (spellRef|runeType)?)>
<!ELEMENT namedItem (iconRef,(regularItem | uniqueWeapon | uniqueArmor | rune | specialItem | systemItem))>
<!ELEMENT regularItem (script?)>
<!-- The script here is executed when the weapon is used. -->
<!ELEMENT uniqueWeapon (weaponTypeRef, conditionScript?, weaponEnhancer*, statusEffectModifier*,attributeModifier*, script?, onEquip?, onUnequip?, (spellRef|runeType)?)>
<!-- The script here is executed when the armor is used. -->
<!ELEMENT uniqueArmor   (armorTypeRef, conditionScript?, armorEnhancer*, statusEffectModifier*, attributeModifier*, script?, onEquip?, onUnequip?, (spellRef|runeType)?)>
<!ELEMENT rune (spellRef)>
<!ELEMENT specialItem EMPTY>
<!ELEMENT systemItem EMPTY>
<!ELEMENT runeType EMPTY>
<!ELEMENT weaponTypeRef EMPTY>
<!ELEMENT armorTypeRef EMPTY>
<!ELEMENT weaponClassRef EMPTY>
<!ELEMENT armorClassRef EMPTY>
<!-- The script  here is executed when the weapon is used. -->
<!ELEMENT weaponClass (conditionScript?,attributeModifier*, weaponEnhancer*,statusEffectModifier*, script?, onEquip?, onUnequip?, weaponTypeExclusionList?)>
<!-- The script here is executed when the armor is used (wearer is attacked) -->
<!ELEMENT armorClass  (conditionScript?,attributeModifier*, armorEnhancer*, statusEffectModifier*, script?, onEquip?, onUnequip?, armorTypeExclusionList?)>
<!ELEMENT armorType (iconRef)>
<!ELEMENT weaponType (iconRef,onEquip?,onUnequip?,onInvoke?)>
<!ELEMENT weaponEnhancer EMPTY>
<!ELEMENT armorEnhancer EMPTY>
<!ELEMENT statusEffectModifier EMPTY>
<!ELEMENT attributeModifier (script?)>
<!ELEMENT attributeEnhancer EMPTY> <!-- Similar to attributeModifier, but a temporary bonus when item is equipped. -->
<!ELEMENT weaponTypeExclusionList (weaponTypeRef*)>
<!ELEMENT armorTypeExclusionList (armorTypeRef*)>

<!-- Spell DTD -->
<!ELEMENT spellRef EMPTY>
<!ELEMENT spellList (spell+)>
<!ELEMENT spell (magicResistance?,script?>
<!ELEMENT magicResistance EMPTY>

<!-- Animation DTD -->
<!ELEMENT animations(animation+)>
<!ELEMENT animation (phase+)>
<!ELEMENT animationRef EMPTY>
<!ELEMENT phase (spriteAnimation)*> <!-- If there are no animationSprites then its treated like a pause -->
<!ELEMENT spriteAnimation ((spriteStub|spriteRef|battleSprite),spriteMovement?,alterSprite?, hide?)>
<!ELEMENT spriteStub EMPTY>
<!ELEMENT battleSprite EMPTY>
<!ELEMENT spriteMovement (spriteMovementScript*)>
<!ELEMENT hide EMPTY>


<!-- Status Effect DTD -->
<!ELEMENT statusEffectList (statusEffect*)>
<!ELEMENT statusEffect (onInvoke?,onRound?,onCountdown?,onRemove?, attributeModifier*)>
<!-- These guys are all Effect type. -->
<!-- Notice that you can have a status effect that causes other status effects! -->
<!ELEMENT onInvoke (script)>
<!ELEMENT onRound (script)>
<!ELEMENT onCountdown (script)>
<!ELEMENT onRemove (script)>
<!ELEMENT onSelect (script)>
<!ELEMENT onDeselect (script)>

<!-- Character Class DTD -->
<!ELEMENT characterClass (battleMenu,weaponTypeRef*, armorTypeRef*,statScript*,skillRef*)>
<!ELEMENT characterClasses (characterClass+)>
<!ELEMENT statScript (script)>
<!ELEMENT skill (conditionScript?, prereqSkillRef*, onInvoke?, onRemove?)>
<!ELEMENT skillList (skill)+>
<!ELEMENT prereqSkillRef EMPTY>
<!ELEMENT skillRef EMPTY>
<!ELEMENT battleMenu (battleMenuOption*)>
<!ELEMENT battleMenuOption (conditionScript?,(onSelect|skillRef|battleMenu)>

<!-- Characters -->
<!ELEMENT character (spriteDefinition*)>
<!ELEMENT spriteDefinition (spriteRef)>

<!ELEMENT startingEquipmentRef (itemRef)>

<!-- The skill, weapontype, weapon, armortype, and armor refs define when the animation should happen -->
<!-- so, you can define an animation for a particular skill, or usage of a weapon type, or for a specific weapon -->
<!ELEMENT bindPoint EMPTY>

<!-- Monsters -->
<!ELEMENT monster (onRound, onInvoke?,onRemove?, spriteDefinition*, stat*, itemRef*)>
<!ELEMENT stat EMPTY>

<!ELEMENT monsterRegion (monsterGroup+)>
<!ELEMENT monsterGroup (monsterRef+)>

<!-- Attributes -->

<!ATTLIST level name CDATA #REQUIRED>
<!ATTLIST levelHeader music CDATA #REQUIRED>
<!ATTLIST levelHeader width CDATA #REQUIRED>
<!ATTLIST levelHeader height CDATA #REQUIRED>
<!ATTLIST levelHeader allowsRunning (true|false) #IMPLIED>
<!ATTLIST script id CDATA #REQUIRED>
<!ATTLIST conditionScript CDATA #REQUIRED>
<!ATTLIST tile name CDATA #REQUIRED>
<!ATTLIST tile xpos CDATA #REQUIRED>
<!ATTLIST tile ypos CDATA #REQUIRED>
<!ATTLIST tile zorder CDATA #IMPLIED>
<!ATTLIST tile hot (true|false) #IMPLIED>
<!ATTLIST tile floater (true|false) #IMPLIED>
<!ATTLIST tile pops (true|false) #IMPLIED> <!-- Default is false, does not pop the level stack -->
<!ATTLIST tilemap mapname CDATA #REQUIRED>
<!ATTLIST tilemap mapx CDATA #REQUIRED>
<!ATTLIST tilemap mapy CDATA #REQUIRED>
<!ATTLIST mo name CDATA #REQUIRED>
<!ATTLIST mo type (npc|square|container|warp|door) #REQUIRED>
<!ATTLIST mo xpos CDATA #REQUIRED>
<!ATTLIST mo ypos CDATA #REQUIRED>
<!ATTLIST mo size (small|medium|large|tall|wide) #REQUIRED>
<!ATTLIST mo solid (true|false) #IMPLIED>
<!ATTLIST movement movementType (none|wander|paceNS|paceEW|script) #REQUIRED>
<!ATTLIST movement speed (slow|medium|fast) #IMPLIED>
<!ATTLIST event name CDATA #REQUIRED>
<!ATTLIST event repeatable (true|false) #IMPLIED>
<!ATTLIST event remember (true|false) #IMPLIED>
<!ATTLIST event triggerType (talk|step|act) #REQUIRED>
<!ATTLIST namedItemRef itemType (item|weapon|armor|rune|special|system)  #REQUIRED>
<!ATTLIST directionBlock north (true|false) #REQUIRED>
<!ATTLIST directionBlock south (true|false) #REQUIRED>
<!ATTLIST directionBlock east (true|false) #REQUIRED>
<!ATTLIST directionBlock west (true|false) #REQUIRED>
<!ATTLIST spriteRef type (still|twoway|fourway|idle|weak|dead|use|recoil) #IMPLIED>
<!ATTLIST namedItem name CDATA #REQUIRED>
<!ATTLIST namedItem maxInventory CDATA #IMPLIED>
<!ATTLIST namedItem dropRarity (never|rare|uncommon|common) #REQUIRED>
<!ATTLIST regularItem value CDATA #REQUIRED>
<!ATTLIST regularItem sellValueMultiplier CDATA #IMPLIED>
<!ATTLIST regularItem reusable (true|false) #REQUIRED>
<!ATTLIST regularItem targetable (all|single|either|self-only) #REQUIRED>
<!ATTLIST regularItem use (battle|world|both) #REQUIRED>
<!ATTLIST regularItem defaultTarget (party|monsters) #IMPLIED>
<!ATTLIST uniqueArmor valueMultiplier CDATA #REQUIRED>
<!ATTLIST uniqueWeapon valueMultiplier CDATA #REQUIRED>
<!ATTLIST uniqueWeapon scriptMode (attackBefore|attackAfter|forgoAttack|world) #IMPLIED>
<!ATTLIST weaponClass name CDATA #REQUIRED>
<!ATTLIST weaponClass valueMultiplier CDATA #REQUIRED>
<!ATTLIST weaponClass valueAdd  CDATA #IMPLIED>
<!-- -->
<!ATTLIST weaponClass scriptMode (attackBefore|attackAfter|forgoAttack|world) #IMPLIED>
<!ATTLIST weaponType name CDATA #REQUIRED>
<!ATTLIST weaponType damageCategory (bash|jab|slice|dark|holy|wind|air|water|ice|fire|lightning|poison) #REQUIRED>
<!ATTLIST weaponType basePrice CDATA #REQUIRED>
<!ATTLIST weaponType baseAttack CDATA #REQUIRED>
<!ATTLIST weaponType hitAdd CDATA #REQUIRED> <!-- In percent 0-1 float-->
<!ATTLIST weaponType baseCritical CDATA #IMPLIED> <!-- In percent. Default = "0.05" -->
<!ATTLIST weaponType ranged (true|false) #IMPLIED>
<!ATTLIST weaponType twoHanded (true|false) #IMPLIED>
<!ATTLIST armorClass name CDATA #REQUIRED>
<!ATTLIST armorClass valueMultiplier CDATA #REQUIRED>
<!ATTLIST armorClass valueAdd  CDATA #IMPLIED>
<!ATTLIST armorType name CDATA #REQUIRED>
<!ATTLIST armorType basePrice CDATA #REQUIRED>
<!ATTLIST armorType baseArmorClass CDATA #REQUIRED>
<!ATTLIST armorType baseResist CDATA #REQUIRED>
<!ATTLIST armorType slot (head|body|shield|feet|hands) #REQUIRED>

<!ATTLIST attributeModifier type(add|multiply|toggle) #REQUIRED>
<!ATTLIST attributeModifier attribute CDATA #REQUIRED>
<!ATTLIST attributeModifier value CDATA #IMPLIED>
<!ATTLIST runeType type (none|rune|ultraRune) #REQUIRED>
<!ATTLIST weaponEnhancer attribute CDATA #REQUIRED>
<!ATTLIST weaponEnhancer add CDATA #IMPLIED>
<!ATTLIST weaponEnhancer multiplier CDATA #IMPLIED>
<!ATTLIST armorEnhancer  attribute CDATA #REQUIRED>
<!ATTLIST armorEnhancer add CDATA #IMPLIED>
<!ATTLIST armorEnhancer multiplier CDATA #IMPLIED>
<!ATTLIST statusEffectModifier statusRef CDATA #REQUIRED>

<!ATTLIST weaponTypeRef name CDATA #REQUIRED>
<!ATTLIST armorTypeRef name CDATA #REQUIRED>
<!ATTLIST weaponClassRef name CDATA #REQUIRED>
<!ATTLIST armorClassRef name CDATA #REQUIRED>


<!-- For a weapon, this is a chance of inflicting the status from 0 to 1. -->
<!-- For armor it is the percentage chance of blocking the status referenced -->
<!ATTLIST statusEffectModifier modifier CDATA #REQUIRED>
<!ATTLIST spellRef name CDATA #REQUIRED>
<!ATTLIST spellRef type (elemental|white|status|other) #REQUIRED>
<!ATTLIST animation name CDATA #REQUIRED>
<!ATTLIST animation type (battle|world) #REQUIRED>
<!ATTLIST spriteAnimation name CDATA #REQUIRED>
<!ATTLIST phase parallel (true|false) #REQUIRED> <!-- Par means everything within this phase happens in parallel. Seq means they happen in order of their appearance in the xml -->
<!ATTLIST phase duration CDATA #REQUIRED>
<!-- use this animation on each target -->
<!ATTLIST phase for_each (true|false) #IMPLIED>

<!ATTLIST alterSprite who (none|caster|caster_group|target|target_group|all) #REQUIRED>
<!ATTLIST alterSprite how (hide|half_size|double_size|darken|lighten|xflip|yflip|larger|smaller|redscale|bluescale|greenscale|grayscale|negative) #REQUIRED>
<!ATTLIST spriteMovement initialFocus (screen|caster|target|caster_group|target_group|locus) #REQUIRED>
<!ATTLIST spriteMovement initialFocusX (center|towards|away|left|right) #IMPLIED> <!-- default center -->
<!ATTLIST spriteMovement initialFocusY (center|top|bottom) #IMPLIED> <!-- default center-->
<!ATTLIST spriteMovement initialFocusZ (back|front) #IMPLIED> <!-- default to front -->
<!-- defaults to endfocus if there is one, still if theres not -->
<!ATTLIST spriteMovement movementDirection (still|n|e|s|w|ne|nw|se|sw|away|towards|endFocus) #IMPLIED>
<!ATTLIST spriteMovement movementStyle (straight|arc_over|arc_under|sine|xonly|yonly|circle) #IMPLIED> <!-- Defaults to straight -->
<!ATTLIST spriteMovement rotationDegrees CDATA #IMPLIED> <!-- default is 0, no rotation applied -->
<!ATTLIST spriteMovement circleDegrees CDATA #IMPLIED> <!-- for movementStyle circle, how many degrees to circle -->
<!ATTLIST spriteMovement circleStartAngle CDATA #IMPLIED> <!-- From where to start circling, for movementStyle circle -->
<!ATTLIST spriteMovement circleDirection (clockwise|counterclockwise|away|towards) #IMPLIED>
<!ATTLIST spriteMovement circleRadius CDATA #IMPLIED>
<!ATTLIST spriteMovement movementCompletion CDATA #IMPLIED> <!-- How far to move. defaults to 1.0, but you could do 0.5 for halfway, etc -->
<!ATTLIST spriteMovement pixelDistance CDATA #IMPLIED> <!-- If you want to limit your movement to a particular pixel distance, otherwise -1 -->
<!-- defaults to target-->
<!ATTLIST spriteMovement endFocus (screen|caster|target|caster_group|target_group|locus) #IMPLIED>
<!-- defaults to center -->
<!ATTLIST spriteMovement endFocusX (center|towards|away) #IMPLIED>
<!-- defaults to center -->
<!ATTLIST spriteMovement endFocusY (center|top|bottom) #IMPLIED>
<!-- defaults to false-->
<!ATTLIST spriteMovement endFocusZ (back|front) #IMPLIED>

<!ATTLIST spriteMovement circleGrowth CDATA #IMPLIED> <!-- defaults at 0, lets you make spirals -->


<!ATTLIST spriteStub which (main|off) #IMPLIED> <!-- So far no others... -->


<!ATTLIST battleSprite who (none|caster|caster_group|target|target_group|all) #REQUIRED>
<!ATTLIST battleSprite which (idle|attack|recoil|weak|dead|use) #REQUIRED> 
<!-- These points are relevative to the sprite wielding the weapon-->
<!ATTLIST battleMenuOption name CDATA #REQUIRED>
<!ATTLIST skill allowsGroupTarget (true|false) #IMPLIED>
<!ATTLIST skill defaultToEnemyGroup (true|false) #IMPLIED>

<!-- Note: movement speed will be determined by the amount of pixels that need to be covered and thy e duration of the par -->
<!-- So that if the par duration is three seconds, the sprite will move to its destination in three seconds -->
<!ATTLIST spell name CDATA #REQUIRED>
<!ATTLIST spell damageCategory (bash|jab|slice|dark|holy|wind|air|water|ice|fire|lightning|poison) #REQUIRED>
<!ATTLIST spell icon CDATA #REQUIRED>
<!ATTLIST spell type (elemental|white|status|other) #REQUIRED>
<!ATTLIST spell use (battle|world|both) #REQUIRED>
<!ATTLIST spell targetable (all|single|either|self-only) #REQUIRED>
<!ATTLIST spell appliesToWeapons (true|false) #IMPLIED> <!-- Used in generation of random weapons? Defaults to false -->
<!ATTLIST spell appliesToArmor   (true|false) #IMPLIED> <!-- Used in generation of random armor? Defaults to false -->
<!ATTLIST spell mp CDATA #REQUIRED>
<!ATTLIST spell value CDATA #REQUIRED>

<!-- Note that, while removeStatus does obey the 'chance' parameter, it ignores any status effect resistances of the target. -->
<!-- Therefore, a removeStatus for poison with 80% really does remove poison 80% of the time. Whereas, when inflicting the status (con'td) -->
<!-- You have the chance as well as the target's resistances to account for -->
<!ATTLIST magicResistance resist CDATA #REQUIRED>
<!ATTLIST magicResistance type (fire|water|earth|wind|holy|dark|elemental|all) #REQUIRED>

<!ATTLIST statusEffect name CDATA #REQUIRED>
<!ATTLIST statusEffect last (battle|round_count|permanent) #REQUIRED>
<!ATTLIST statusEffect lengthMultiplier CDATA #IMPLIED>
<!ATTLIST statusEffect roundCount CDATA #IMPLIED>

<!ATTLIST characterClass name CDATA #REQUIRED>
<!ATTLIST characterClass gender (male|female|either) #IMPLIED> <!-- Defaults to either -->
<!ATTLIST statScript stat CDATA #REQUIRED>
<!ATTLIST skill name CDATA #REQUIRED>
<!ATTLIST skill icon CDATA #IMPLIED>
<!ATTLIST skill sp CDATA #REQUIRED> <!-- Skill points to earn skill -->
<!ATTLIST skill bp CDATA #REQUIRED> <!-- Percentage of 'Break' to use skill -->
<!ATTLIST skill minLevel CDATA #IMPLIED> <!-- Default is 1 -->
<!ATTLIST skill type (battle|switch) #IMPLIED> <!-- Defaults to battle -->
<!ATTLIST prereqSkillRef skillName CDATA #REQUIRED>
<!ATTLIST skillRef skillName CDATA #REQUIRED>
<!ATTLIST skillRef overrideSp CDATA #IMPLIED> <!-- Defaults to skill's value -->
<!ATTLIST skillRef overrideBp CDATA #IMPLIED> <!-- Defaults to skill's value -->
<!ATTLIST skillRef overrideMinLevel CDATA #IMPLIED> <!-- Defaults to skill's value -->

<!ATTLIST animationRef CDATA #REQUIRED>

<!ATTLIST character name CDATA #REQUIRED>
<!ATTLIST character class CDATA #REQUIRED>
<!ATTLIST character type (nonliving|living|magical)>
<!ATTLIST character spriteResource CDATA #REQUIRED>

<!ATTLIST equipmentRef slot (right_hand|left_hand|head|body|shield|feet|right_ring|left_ring) #REQUIRED>


<!ATTLIST spriteDefinition name CDATA #REQUIRED>
<!ATTLIST spriteDefinition bindPoint1 CDATA #IMPLIED>
<!ATTLIST spriteDefinition bindPoint2 CDATA #IMPLIED>



<!ATTLIST monster name CDATA #REQUIRED>
<!ATTLIST monster mode (manual|class) #REQUIRED>
<!ATTLIST monster spriteResources CDATA #REQUIRED>
<!ATTLIST monster class CDATA #IMPLIED> <!-- Allows the use of a character class -->
<!ATTLIST monster level CDATA #IMPLIED>

<!ATTLIST monsterRegion levelX CDATA #REQUIRED>
<!ATTLIST monsterRegion levelY CDATA #REQUIRED>
<!ATTLIST monsterRegion width CDATA #REQUIRED>
<!ATTLIST monsterRegion height CDATA #REQUIRED>
<!ATTLIST monsterRegion encounterRate CDATA #IMPLIED> <!-- 0.0 - 1.0 ,Game settings supply default -->
<!ATTLIST monsterRegion backdrop CDATA #REQUIRED>

<!ATTLIST monsterGroup weight CDATA #IMPLIED> <!-- Defaults to standard weight -->
<!ATTLIST monsterGroup cellRows CDATA #IMPLIED> <!-- Defaults to system setting-->
<!-- Defaults to system setting -->
<!ATTLIST monsterGroup cellColumns CDATA #IMPLIED>



<!ATTLIST monsterRef name CDATA #REQUIRED>
<!ATTLIST monsterRef count CDATA #IMPLIED> <!-- defaults to one -->
<!ATTLIST monsterRef cellX CDATA #IMPLIED> <!-- Required within monsterGroup -->
<!ATTLIST monsterRef cellY CDATA #IMPLIED> <!-- Required within monsterGroup-->
<!-- for multiple of this monster, how many rows -->
<!ATTLIST monsterRef cols CDATA #IMPLIED>
<!-- for multiple of this monster, how many rows -->
<!ATTLIST monsterRef rows CDATA #IMPLIED>

<!ATTLIST stat id CDATA #REQUIRED>
<!ATTLIST stat value CDATA #IMPLIED> <!-- Either this, or toggle -->
<!ATTLIST stat toggle (true|false) #IMPLIED> <!-- Either this or value -->
