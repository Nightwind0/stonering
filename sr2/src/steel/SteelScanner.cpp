// DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY
// SteelScanner.cpp generated by reflex at Sat Jan 27 18:39:38 2007
// from steel.reflex using reflex.cpp.langspec and reflex.cpp.implementation.codespec
// DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY

#include "SteelScanner.h"

#include <cassert>
#include <iostream>


#line 20 "steel.reflex"

#include <iostream>
#include <sstream>
#include <cassert>
#include "SteelScanner.h"
#include "Ast.h"

#line 21 "SteelScanner.cpp"

SteelScanner::SteelScanner ()
    :
    ReflexCpp_::Scanner_(
        ms_state_table_,
        ms_state_count_,
        ms_transition_table_,
        ms_transition_count_,
        ms_accept_handler_count_,
        static_cast<ReflexCpp_::InputBuffer_::IsInputAtEndMethod_>(&SteelScanner::IsInputAtEnd_),
        static_cast<ReflexCpp_::InputBuffer_::ReadNextAtomMethod_>(&SteelScanner::ReadNextAtom_))
{
    // per-input initializations
    ResetForNewInput_();


#line 87 "steel.reflex"

	m_char_cursor = 0;
	m_line = 1;
	m_script_name = "UNKNOWN SCRIPT";	
	m_pBuffer = "";

#line 45 "SteelScanner.cpp"
}

SteelScanner::~SteelScanner ()
{
}

void SteelScanner::SetScannerState (State::Name state)
{
    assert(
           state == State::MAIN ||
           state == State::STRING_LITERAL_GUTS ||
           (false && "invalid State::Name"));
    SetInitialState_(ms_state_table_ + state);
}

SteelParser::Token::Type SteelScanner::Scan (
#line 105 "steel.reflex"

AstBase **token

#line 66 "SteelScanner.cpp"
)
{

    std::string accepted_string;
    // this is the main scanner loop.  it only breaks when an accept handler
    // returns or after the unmatched character handler, if certain conditions
    // exist (see comments below).
    while (true)
    {
        bool was_at_end_of_input_ = IsAtEndOfInput();

        ReflexCpp_::Uint32_ accept_handler_index_ = RunDfa_(accepted_string);
        // if no valid accept_handler_index_ was returned, then accepted_string
        // was filled with the first unaccepted input atom (i.e. the rejected
        // atom).  we'll call the HandleUnmatchedCharacter_ method on it.
        if (accept_handler_index_ >= ms_accept_handler_count_)
        {
            // if we were already at the end of input and no
            // rule was matched, break out of the loop.
            if (was_at_end_of_input_)
                break;

            assert(accepted_string.length() == 1);
            ReflexCpp_::Uint8_ rejected_atom = accepted_string[0];

            // execute the rejected-atom-handling actions.
            // the rejected atom is in rejected_atom.
            {

#line 98 "steel.reflex"

	//std::cerr << "Warning: unmatched input found:" 
	//<< '\'' << accepted_string << '\'' << std::endl;

#line 101 "SteelScanner.cpp"

            }
        }
        // otherwise, call the appropriate accept handler code.
        else
        {
            // execute the appropriate accept handler.
            // the accepted string is in accepted_string.
            switch (accept_handler_index_)
            {
                case 0:
                {

#line 134 "steel.reflex"

		return SteelParser::Token::END_;
	
#line 119 "SteelScanner.cpp"

                }
                break;

                case 1:
                {

#line 139 "steel.reflex"

		m_line++;
	
#line 131 "SteelScanner.cpp"

                }
                break;

                case 2:
                {

#line 144 "steel.reflex"

		// Eat the comment
	
#line 143 "SteelScanner.cpp"

                }
                break;

                case 3:
                {

#line 149 "steel.reflex"

		// Eat it
	 
#line 155 "SteelScanner.cpp"

                }
                break;

                case 4:
                {

#line 154 "steel.reflex"

		*token = new AstString(m_line,m_script_name);
		
		SetScannerState(State::STRING_LITERAL_GUTS);
	
#line 169 "SteelScanner.cpp"

                }
                break;

                case 5:
                {

#line 161 "steel.reflex"

		*token = NULL;
		
		return SteelParser::Token::POP;
	
#line 183 "SteelScanner.cpp"

                }
                break;

                case 6:
                {

#line 169 "steel.reflex"

		*token = NULL;
		return SteelParser::Token::CAT;
	
#line 196 "SteelScanner.cpp"

                }
                break;

                case 7:
                {

#line 175 "steel.reflex"

		*token = NULL;
		return SteelParser::Token::DECREMENT;
	
#line 209 "SteelScanner.cpp"

                }
                break;

                case 8:
                {

#line 181 "steel.reflex"

		*token = NULL;
		return SteelParser::Token::INCREMENT;
	
#line 222 "SteelScanner.cpp"

                }
                break;

                case 9:
                {

#line 187 "steel.reflex"

		*token = new AstInteger(m_line,m_script_name,ToInt(accepted_string));
			
		return SteelParser::Token::INT;
	
#line 236 "SteelScanner.cpp"

                }
                break;

                case 10:
                {

#line 194 "steel.reflex"

		*token = new AstInteger(m_line,m_script_name,ToIntFromHex(accepted_string));
		
		return SteelParser::Token::INT;
	
#line 250 "SteelScanner.cpp"

                }
                break;

                case 11:
                {

#line 201 "steel.reflex"

		*token = new AstFloat(m_line,m_script_name,ToFloat(accepted_string));
		return SteelParser::Token::FLOAT;
	
#line 263 "SteelScanner.cpp"

                }
                break;

                case 12:
                {

#line 207 "steel.reflex"

		*token = new AstVarIdentifier(m_line,m_script_name,accepted_string);
		return SteelParser::Token::VAR_IDENTIFIER;		
	
#line 276 "SteelScanner.cpp"

                }
                break;

                case 13:
                {

#line 213 "steel.reflex"

		*token = new AstArrayIdentifier(m_line,m_script_name,accepted_string);
		return SteelParser::Token::ARRAY_IDENTIFIER;
	
#line 289 "SteelScanner.cpp"

                }
                break;

                case 14:
                {

#line 219 "steel.reflex"

		*token = new AstKeyword(m_line,m_script_name);
		return (SteelParser::Token::Type)accepted_string[0];
	
#line 302 "SteelScanner.cpp"

                }
                break;

                case 15:
                {

#line 225 "steel.reflex"

		return (SteelParser::Token::Type)accepted_string[0];
	
#line 314 "SteelScanner.cpp"

                }
                break;

                case 16:
                {

#line 230 "steel.reflex"

		 *token = NULL;
		 return SteelParser::Token::LTE; 
	
#line 327 "SteelScanner.cpp"

                }
                break;

                case 17:
                {

#line 236 "steel.reflex"

		 *token = NULL;
		  return SteelParser::Token::GTE; 
	
#line 340 "SteelScanner.cpp"

                }
                break;

                case 18:
                {

#line 242 "steel.reflex"

		*token = NULL;
		return SteelParser::Token::NE;
	
#line 353 "SteelScanner.cpp"

                }
                break;

                case 19:
                {

#line 248 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::EQ;
	 
#line 366 "SteelScanner.cpp"

                }
                break;

                case 20:
                {

#line 254 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::LT; 
	
#line 379 "SteelScanner.cpp"

                }
                break;

                case 21:
                {

#line 260 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::GT; 
	
#line 392 "SteelScanner.cpp"

                }
                break;

                case 22:
                {

#line 266 "steel.reflex"
 
		*token = NULL;
		 return SteelParser::Token::D;
	 
#line 405 "SteelScanner.cpp"

                }
                break;

                case 23:
                {

#line 272 "steel.reflex"
 
		*token = NULL;
		 return SteelParser::Token::AND;
	 
#line 418 "SteelScanner.cpp"

                }
                break;

                case 24:
                {

#line 278 "steel.reflex"
 
		*token = NULL;
		 return SteelParser::Token::OR;
	 
#line 431 "SteelScanner.cpp"

                }
                break;

                case 25:
                {

#line 284 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::NOT;
	
#line 444 "SteelScanner.cpp"

                }
                break;

                case 26:
                {

#line 290 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::WHILE;
	
#line 457 "SteelScanner.cpp"

                }
                break;

                case 27:
                {

#line 296 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::FOR;
	
#line 470 "SteelScanner.cpp"

                }
                break;

                case 28:
                {

#line 302 "steel.reflex"
 
		*token = NULL;
		 return SteelParser::Token::BREAK;
	
#line 483 "SteelScanner.cpp"

                }
                break;

                case 29:
                {

#line 308 "steel.reflex"
 
		*token = NULL;
		 return SteelParser::Token::CONTINUE;
	
#line 496 "SteelScanner.cpp"

                }
                break;

                case 30:
                {

#line 314 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::IF;
	
#line 509 "SteelScanner.cpp"

                }
                break;

                case 31:
                {

#line 320 "steel.reflex"

		*token = NULL;
		 return SteelParser::Token::ELSE;
	
#line 522 "SteelScanner.cpp"

                }
                break;

                case 32:
                {

#line 326 "steel.reflex"

		 *token = NULL;
		return SteelParser::Token::RETURN;
	
#line 535 "SteelScanner.cpp"

                }
                break;

                case 33:
                {

#line 332 "steel.reflex"
 
		*token = NULL;
		return SteelParser::Token::FUNCTION;
	
#line 548 "SteelScanner.cpp"

                }
                break;

                case 34:
                {

#line 338 "steel.reflex"

	 	*token = NULL;
		
		return SteelParser::Token::VAR;
	
#line 562 "SteelScanner.cpp"

                }
                break;

                case 35:
                {

#line 345 "steel.reflex"

		*token = new AstFuncIdentifier(m_line,m_script_name,accepted_string);
		return SteelParser::Token::FUNC_IDENTIFIER;
	
#line 575 "SteelScanner.cpp"

                }
                break;

                case 36:
                {

#line 356 "steel.reflex"

		// First, add the accepted_string to the string..
		AstString *pString = (AstString*)*token;		
		pString->addChar(accepted_string[0]);
	
#line 589 "SteelScanner.cpp"

                }
                break;

                case 37:
                {

#line 363 "steel.reflex"

		AstString *pString = (AstString*)*token;
		pString->addChar( AstString::getEscapedChar ( accepted_string[1] ) );
	
#line 602 "SteelScanner.cpp"

                }
                break;

                case 38:
                {

#line 371 "steel.reflex"
 
		AstString *pString = (AstString*)*token;

		SetScannerState(State::MAIN);
		return SteelParser::Token::STRING; 
	
#line 617 "SteelScanner.cpp"

                }
                break;

                case 39:
                {

#line 379 "steel.reflex"

		// Error
	
#line 629 "SteelScanner.cpp"

                }
                break;

                default: assert(false && "this should never happen"); break;
            }
        }
    }


#line 28 "steel.reflex"

			

#line 644 "SteelScanner.cpp"
}

bool SteelScanner::IsInputAtEnd_ ()
{

#line 118 "steel.reflex"


	return (m_pBuffer[m_char_cursor] == '\0');

#line 655 "SteelScanner.cpp"
}

ReflexCpp_::Uint8_ SteelScanner::ReadNextAtom_ ()
{

#line 109 "steel.reflex"


	if( m_pBuffer[m_char_cursor] == '\0')
		return '\n';
	else
		return m_pBuffer[m_char_cursor++];


#line 670 "SteelScanner.cpp"
}

void SteelScanner::ResetForNewInput_ ()
{
    ReflexCpp_::Scanner_::ResetForNewInput_(ms_state_table_ + State::START_);


#line 94 "steel.reflex"

	m_line = 0;	

#line 682 "SteelScanner.cpp"
}

// the order of the states indicates priority (only for accept states).
// the lower the state's index in this array, the higher its priority.
ReflexCpp_::Scanner_::DfaState_ const SteelScanner::ms_state_table_[] =
{
    { 40, 4, ms_transition_table_+0 },
    { 40, 44, ms_transition_table_+4 },
    { 3, 2, ms_transition_table_+48 },
    { 1, 0, ms_transition_table_+50 },
    { 40, 1, ms_transition_table_+50 },
    { 18, 0, ms_transition_table_+51 },
    { 4, 0, ms_transition_table_+51 },
    { 40, 3, ms_transition_table_+51 },
    { 12, 4, ms_transition_table_+54 },
    { 15, 0, ms_transition_table_+58 },
    { 15, 1, ms_transition_table_+58 },
    { 8, 0, ms_transition_table_+59 },
    { 15, 1, ms_transition_table_+59 },
    { 7, 0, ms_transition_table_+60 },
    { 15, 1, ms_transition_table_+60 },
    { 2, 2, ms_transition_table_+61 },
    { 9, 3, ms_transition_table_+63 },
    { 40, 1, ms_transition_table_+66 },
    { 11, 1, ms_transition_table_+67 },
    { 40, 2, ms_transition_table_+68 },
    { 40, 3, ms_transition_table_+70 },
    { 10, 3, ms_transition_table_+73 },
    { 9, 2, ms_transition_table_+76 },
    { 6, 0, ms_transition_table_+78 },
    { 14, 0, ms_transition_table_+78 },
    { 20, 1, ms_transition_table_+78 },
    { 16, 0, ms_transition_table_+79 },
    { 15, 1, ms_transition_table_+79 },
    { 19, 0, ms_transition_table_+80 },
    { 21, 1, ms_transition_table_+80 },
    { 17, 0, ms_transition_table_+81 },
    { 15, 3, ms_transition_table_+81 },
    { 13, 4, ms_transition_table_+84 },
    { 35, 4, ms_transition_table_+88 },
    { 35, 6, ms_transition_table_+92 },
    { 35, 6, ms_transition_table_+98 },
    { 23, 4, ms_transition_table_+104 },
    { 35, 6, ms_transition_table_+108 },
    { 35, 6, ms_transition_table_+114 },
    { 35, 5, ms_transition_table_+120 },
    { 35, 6, ms_transition_table_+125 },
    { 28, 4, ms_transition_table_+131 },
    { 35, 6, ms_transition_table_+135 },
    { 35, 6, ms_transition_table_+141 },
    { 35, 6, ms_transition_table_+147 },
    { 35, 6, ms_transition_table_+153 },
    { 35, 6, ms_transition_table_+159 },
    { 35, 6, ms_transition_table_+165 },
    { 35, 6, ms_transition_table_+171 },
    { 29, 4, ms_transition_table_+177 },
    { 22, 4, ms_transition_table_+181 },
    { 35, 6, ms_transition_table_+185 },
    { 35, 6, ms_transition_table_+191 },
    { 35, 6, ms_transition_table_+197 },
    { 31, 4, ms_transition_table_+203 },
    { 35, 8, ms_transition_table_+207 },
    { 35, 6, ms_transition_table_+215 },
    { 27, 4, ms_transition_table_+221 },
    { 35, 6, ms_transition_table_+225 },
    { 35, 6, ms_transition_table_+231 },
    { 35, 6, ms_transition_table_+237 },
    { 35, 6, ms_transition_table_+243 },
    { 35, 6, ms_transition_table_+249 },
    { 35, 6, ms_transition_table_+255 },
    { 33, 4, ms_transition_table_+261 },
    { 35, 6, ms_transition_table_+265 },
    { 30, 4, ms_transition_table_+271 },
    { 35, 6, ms_transition_table_+275 },
    { 35, 6, ms_transition_table_+281 },
    { 25, 4, ms_transition_table_+287 },
    { 35, 6, ms_transition_table_+291 },
    { 24, 4, ms_transition_table_+297 },
    { 35, 6, ms_transition_table_+301 },
    { 35, 6, ms_transition_table_+307 },
    { 5, 4, ms_transition_table_+313 },
    { 35, 6, ms_transition_table_+317 },
    { 35, 6, ms_transition_table_+323 },
    { 35, 6, ms_transition_table_+329 },
    { 35, 6, ms_transition_table_+335 },
    { 35, 6, ms_transition_table_+341 },
    { 32, 4, ms_transition_table_+347 },
    { 35, 5, ms_transition_table_+351 },
    { 35, 6, ms_transition_table_+356 },
    { 34, 4, ms_transition_table_+362 },
    { 35, 6, ms_transition_table_+366 },
    { 35, 6, ms_transition_table_+372 },
    { 35, 6, ms_transition_table_+378 },
    { 35, 6, ms_transition_table_+384 },
    { 26, 4, ms_transition_table_+390 },
    { 0, 44, ms_transition_table_+394 },
    { 15, 44, ms_transition_table_+438 },
    { 0, 44, ms_transition_table_+482 },
    { 40, 2, ms_transition_table_+526 },
    { 40, 5, ms_transition_table_+528 },
    { 36, 0, ms_transition_table_+533 },
    { 38, 0, ms_transition_table_+533 },
    { 36, 2, ms_transition_table_+533 },
    { 37, 0, ms_transition_table_+535 },
    { 39, 5, ms_transition_table_+535 }
};
ReflexCpp_::Size_ const SteelScanner::ms_state_count_ = sizeof(SteelScanner::ms_state_table_) / sizeof(ReflexCpp_::Scanner_::DfaState_);

ReflexCpp_::Scanner_::DfaTransition_ const SteelScanner::ms_transition_table_[] =
{
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 10, 0, ms_state_table_+1 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 10, 2, ms_state_table_+89 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 10, 8, ms_state_table_+90 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 10, 10, ms_state_table_+91 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 9, 9, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 10, 10, ms_state_table_+3 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 32, 32, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 33, 33, ms_state_table_+4 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+6 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 36, 36, ms_state_table_+7 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 37, 37, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 40, 42, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 43, 43, ms_state_table_+10 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 44, 44, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 45, 45, ms_state_table_+12 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 47, 47, ms_state_table_+14 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 48, 48, ms_state_table_+16 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 49, 57, ms_state_table_+22 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 58, 58, ms_state_table_+23 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 59, 59, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 60, 60, ms_state_table_+25 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+27 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 62, 62, ms_state_table_+29 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 64, 64, ms_state_table_+31 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 91, 91, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 94, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+34 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 98, 98, ms_state_table_+37 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 99, 99, ms_state_table_+42 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 100, 100, ms_state_table_+50 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+51 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 102, 102, ms_state_table_+55 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 103, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+65 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+67 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+70 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 112, 112, ms_state_table_+72 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 113, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+75 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 117, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 118, 118, ms_state_table_+81 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 119, 119, ms_state_table_+84 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 120, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 123, 123, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 125, 125, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 9, 9, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 32, 32, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+5 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+8 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 43, 43, ms_state_table_+11 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 45, 45, ms_state_table_+13 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 47, 47, ms_state_table_+15 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 1, 9, ms_state_table_+15 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 11, 255, ms_state_table_+15 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 46, 46, ms_state_table_+17 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+19 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 120, 120, ms_state_table_+20 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+18 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+18 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 46, 46, ms_state_table_+17 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+19 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 70, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 102, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 70, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 102, ms_state_table_+21 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 46, 46, ms_state_table_+17 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+22 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+26 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+28 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+30 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+32 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+35 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 99, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 100, 100, ms_state_table_+36 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 101, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+38 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 100, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+39 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 102, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+40 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 98, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 106, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 107, 107, ms_state_table_+41 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 108, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 110, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+43 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 112, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+44 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 115, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 116, 116, ms_state_table_+45 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 117, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+46 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+47 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 116, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 117, 117, ms_state_table_+48 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 118, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 100, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+49 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 102, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 107, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 108, 108, ms_state_table_+52 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 109, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 114, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 115, 115, ms_state_table_+53 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 116, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 100, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+54 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 102, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 110, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+56 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 112, 116, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 117, 117, ms_state_table_+58 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 118, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+57 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+59 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 98, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 99, 99, ms_state_table_+60 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 100, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 115, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 116, 116, ms_state_table_+61 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 117, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+62 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 110, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+63 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 112, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+64 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 101, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 102, 102, ms_state_table_+66 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 103, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 110, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+68 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 112, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 115, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 116, 116, ms_state_table_+69 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 117, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+71 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 110, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+73 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 112, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 111, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 112, 112, ms_state_table_+74 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 113, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 100, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+76 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 102, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 115, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 116, 116, ms_state_table_+77 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 117, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 116, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 117, 117, ms_state_table_+78 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 118, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+79 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+80 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 111, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+82 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 98, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+83 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 103, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 104, 104, ms_state_table_+85 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 105, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+86 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 107, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 108, 108, ms_state_table_+87 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 109, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 100, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+88 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 102, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 48, 57, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 97, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 9, 9, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 10, 10, ms_state_table_+3 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 32, 32, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 33, 33, ms_state_table_+4 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+6 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 36, 36, ms_state_table_+7 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 37, 37, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 40, 42, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 43, 43, ms_state_table_+10 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 44, 44, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 45, 45, ms_state_table_+12 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 47, 47, ms_state_table_+14 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 48, 48, ms_state_table_+16 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 49, 57, ms_state_table_+22 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 58, 58, ms_state_table_+23 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 59, 59, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 60, 60, ms_state_table_+25 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+27 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 62, 62, ms_state_table_+29 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 64, 64, ms_state_table_+31 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 91, 91, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 94, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+34 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 98, 98, ms_state_table_+37 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 99, 99, ms_state_table_+42 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 100, 100, ms_state_table_+50 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+51 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 102, 102, ms_state_table_+55 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 103, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+65 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+67 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+70 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 112, 112, ms_state_table_+72 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 113, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+75 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 117, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 118, 118, ms_state_table_+81 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 119, 119, ms_state_table_+84 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 120, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 123, 123, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 125, 125, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 9, 9, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 10, 10, ms_state_table_+3 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 32, 32, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 33, 33, ms_state_table_+4 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+6 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 36, 36, ms_state_table_+7 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 37, 37, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 40, 42, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 43, 43, ms_state_table_+10 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 44, 44, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 45, 45, ms_state_table_+12 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 47, 47, ms_state_table_+14 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 48, 48, ms_state_table_+16 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 49, 57, ms_state_table_+22 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 58, 58, ms_state_table_+23 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 59, 59, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 60, 60, ms_state_table_+25 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+27 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 62, 62, ms_state_table_+29 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 64, 64, ms_state_table_+31 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 91, 91, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 94, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+34 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 98, 98, ms_state_table_+37 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 99, 99, ms_state_table_+42 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 100, 100, ms_state_table_+50 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+51 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 102, 102, ms_state_table_+55 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 103, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+65 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+67 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+70 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 112, 112, ms_state_table_+72 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 113, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+75 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 117, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 118, 118, ms_state_table_+81 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 119, 119, ms_state_table_+84 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 120, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 123, 123, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 125, 125, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 9, 9, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 10, 10, ms_state_table_+3 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 32, 32, ms_state_table_+2 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 33, 33, ms_state_table_+4 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+6 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 36, 36, ms_state_table_+7 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 37, 37, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 40, 42, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 43, 43, ms_state_table_+10 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 44, 44, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 45, 45, ms_state_table_+12 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 47, 47, ms_state_table_+14 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 48, 48, ms_state_table_+16 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 49, 57, ms_state_table_+22 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 58, 58, ms_state_table_+23 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 59, 59, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 60, 60, ms_state_table_+25 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 61, 61, ms_state_table_+27 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 62, 62, ms_state_table_+29 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 64, 64, ms_state_table_+31 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 65, 90, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 91, 91, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 94, ms_state_table_+9 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 95, 95, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 97, 97, ms_state_table_+34 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 98, 98, ms_state_table_+37 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 99, 99, ms_state_table_+42 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 100, 100, ms_state_table_+50 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 101, 101, ms_state_table_+51 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 102, 102, ms_state_table_+55 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 103, 104, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 105, 105, ms_state_table_+65 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 106, 109, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 110, 110, ms_state_table_+67 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 111, 111, ms_state_table_+70 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 112, 112, ms_state_table_+72 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 113, 113, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 114, 114, ms_state_table_+75 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 115, 117, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 118, 118, ms_state_table_+81 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 119, 119, ms_state_table_+84 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 120, 122, ms_state_table_+33 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 123, 123, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 125, 125, ms_state_table_+24 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 2, 0, ms_state_table_+93 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_CONDITIONAL_, 2, 2, ms_state_table_+98 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 1, 33, ms_state_table_+94 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+95 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 35, 91, ms_state_table_+94 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 92, 92, ms_state_table_+96 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 255, ms_state_table_+94 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 1, 9, ms_state_table_+97 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 11, 255, ms_state_table_+97 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 1, 33, ms_state_table_+94 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 34, 34, ms_state_table_+95 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 35, 91, ms_state_table_+94 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_, 92, 92, ms_state_table_+96 },
    { ReflexCpp_::Scanner_::DfaTransition_::TT_INPUT_ATOM_RANGE_, 93, 255, ms_state_table_+94 }
};
ReflexCpp_::Size_ const SteelScanner::ms_transition_count_ = sizeof(SteelScanner::ms_transition_table_) / sizeof(ReflexCpp_::Scanner_::DfaTransition_);

ReflexCpp_::Uint32_ const SteelScanner::ms_accept_handler_count_ = 40;


#line 49 "steel.reflex"

void SteelScanner::setBuffer(const char * pBuffer, const std::string &name)
{
	assert ( NULL != pBuffer );
	m_char_cursor = 0;
	m_line = 1;
	m_pBuffer = pBuffer;
	m_script_name = name;
}
int SteelScanner::ToInt(const std::string &text)
{
	std::istringstream str(text);
	int i;
	str >> i;

	return i;
}

double SteelScanner::ToFloat(const std::string &text)
{
	std::istringstream str(text);
	double d;
	str >> d;

	return d;
}

int SteelScanner::ToIntFromHex(const std::string &text)
{
	std::istringstream str(text);
	int i;

	str >> std::hex >> i;
	return i;
}


#line 1377 "SteelScanner.cpp"


