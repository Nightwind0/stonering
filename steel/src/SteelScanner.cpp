// DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY
// SteelScanner.cpp generated by reflex at Tue Oct 12 17:52:40 2010
// from steel.reflex using reflex.cpp.targetspec and reflex.cpp.implementation.codespec
// DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY ! DO NOT MODIFY

#include "SteelScanner.h"

#include <iostream>

#define REFLEX_CPP_DEBUG_CODE_(spew_code) if (DebugSpew()) { spew_code; }


#line 21 "steel.reflex"

#include <iostream>
#include <sstream>
#include <cassert>
#include "SteelScanner.h"
#include "Ast.h"

#line 22 "SteelScanner.cpp"

SteelScanner::SteelScanner ()
    :
    ReflexCpp_::AutomatonApparatus_(
        ms_state_table_,
        ms_state_count_,
        ms_transition_table_,
        ms_transition_count_,
        ms_accept_handler_count_,
        static_cast<ReflexCpp_::InputApparatus_::IsInputAtEndMethod_>(&SteelScanner::IsInputAtEnd_),
        static_cast<ReflexCpp_::InputApparatus_::ReadNextAtomMethod_>(&SteelScanner::ReadNextAtom_))
{
    DebugSpew(false);


#line 88 "steel.reflex"

	m_char_cursor = 0;
	m_line = 1;
	m_script_name = "UNKNOWN SCRIPT";	
	m_pBuffer = "";
	m_token = NULL;

#line 46 "SteelScanner.cpp"

    ResetForNewInput();
}

SteelScanner::~SteelScanner ()
{
}

SteelScanner::StateMachine::Name SteelScanner::CurrentStateMachine () const
{
    assert(InitialState_() != NULL);
    BarfCpp_::Size initial_node_index = InitialState_() - ms_state_table_;
    assert(initial_node_index < ms_state_count_);
    switch (initial_node_index)
    {
        default: assert(false && "invalid initial node index -- this should never happen"); return StateMachine::START_;
        case 0: return StateMachine::COMMENT_GUTS;
        case 10: return StateMachine::MAIN;
        case 145: return StateMachine::STRING_LITERAL_GUTS;
    }
}

void SteelScanner::SwitchToStateMachine (StateMachine::Name state_machine)
{
    assert(
        state_machine == StateMachine::COMMENT_GUTS ||
        state_machine == StateMachine::MAIN ||
        state_machine == StateMachine::STRING_LITERAL_GUTS ||
        (false && "invalid StateMachine::Name"));
    REFLEX_CPP_DEBUG_CODE_(
        std::cerr << "SteelScanner:" << " switching to state machine "
                  << ms_state_machine_name_[state_machine];
        if (ms_state_machine_mode_flags_[state_machine] != 0)
        {
            if ((ms_state_machine_mode_flags_[state_machine] & AutomatonApparatus_::MF_CASE_INSENSITIVE_) != 0)
                std::cerr << " %case_insensitive";
            if ((ms_state_machine_mode_flags_[state_machine] & AutomatonApparatus_::MF_UNGREEDY_) != 0)
                std::cerr << " %ungreedy";
        }
        std::cerr << std::endl)
    InitialState_(ms_state_table_ + ms_state_machine_start_state_index_[state_machine]);
    ModeFlags_(ms_state_machine_mode_flags_[state_machine]);
    assert(CurrentStateMachine() == state_machine);
}

void SteelScanner::ResetForNewInput ()
{
    REFLEX_CPP_DEBUG_CODE_(
        std::cerr << "SteelScanner:" << " executing reset-for-new-input actions and switching to state machine "
                  << ms_state_machine_name_[StateMachine::START_];
        if (ms_state_machine_mode_flags_[StateMachine::START_] != 0)
        {
            if ((ms_state_machine_mode_flags_[StateMachine::START_] & AutomatonApparatus_::MF_CASE_INSENSITIVE_) != 0)
                std::cerr << " %case_insensitive";
            if ((ms_state_machine_mode_flags_[StateMachine::START_] & AutomatonApparatus_::MF_UNGREEDY_) != 0)
                std::cerr << " %ungreedy";
        }
        std::cerr << std::endl)
    ReflexCpp_::AutomatonApparatus_::ResetForNewInput_(ms_state_table_ + ms_state_machine_start_state_index_[StateMachine::START_], ms_state_machine_mode_flags_[StateMachine::START_]);
    assert(CurrentStateMachine() == StateMachine::START_);


#line 96 "steel.reflex"

	m_line = 0;	

#line 113 "SteelScanner.cpp"
}

SteelParser::Token SteelScanner::Scan () throw()
{

    std::string work_string;
    // this is the main scanner loop.  it only breaks when an accept handler
    // returns or after the unmatched character handler, if certain conditions
    // exist (see comments below).
    while (true)
    {
        // clear the previous accepted/rejected string.
        work_string.clear();
        // reset the char buffer and other stuff
        PrepareToScan_();

        bool was_at_end_of_input_ = IsAtEndOfInput();

        BarfCpp_::Uint32 accept_handler_index_ = RunDfa_(work_string);
        // if no valid accept_handler_index_ was returned, then work_string
        // was filled with everything up to the char after the keep_string
        // cursor (i.e. the rejected atom).
        if (accept_handler_index_ >= ms_accept_handler_count_)
        {
            // if we were already at the end of input and no
            // rule was matched, break out of the loop.
            if (was_at_end_of_input_)
                break;

            std::string &rejected_string = work_string;
            BarfCpp_::Uint8 rejected_atom = rejected_string.empty() ? '\0' : *rejected_string.rbegin();

            REFLEX_CPP_DEBUG_CODE_(
                std::cerr << "SteelScanner:" << " rejecting string ";
                PrintString_(rejected_string);
                std::cerr << " (rejected_atom is \'";
                PrintAtom_(rejected_atom);
                std::cerr << "\')" << std::endl)

            // execute the rejection actions.  the do/while loop is so that a
            // break statement inside the rejection actions doesn't break out
            // of the main scanner loop.
            do
            {

#line 100 "steel.reflex"

	//std::cerr << "Warning: unmatched input found:" 
	//<< '\'' << accepted_string << '\'' << std::endl;

#line 164 "SteelScanner.cpp"

            }
            while (false);
        }
        // otherwise, call the appropriate accept handler code.
        else
        {
            std::string &accepted_string = work_string;

            REFLEX_CPP_DEBUG_CODE_(
                std::cerr << "SteelScanner:" << " accepting string ";
                PrintString_(accepted_string);
                std::cerr << " in state machine " << ms_state_machine_name_[CurrentStateMachine()]
                          << " using regex (" << ms_accept_handler_regex_[accept_handler_index_] << ")" << std::endl)

            // execute the appropriate accept handler.
            // the accepted string is in accepted_string.
            switch (accept_handler_index_)
            {
                case 0:
                {

#line 375 "steel.reflex"

		SwitchToStateMachine(StateMachine::MAIN);
	
#line 191 "SteelScanner.cpp"

                }
                break;

                case 1:
                {

#line 380 "steel.reflex"

		// Eat
	
#line 203 "SteelScanner.cpp"

                }
                break;

                case 2:
                {

#line 134 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::END_,NULL);
	
#line 215 "SteelScanner.cpp"

                }
                break;

                case 3:
                {

#line 139 "steel.reflex"

		    SwitchToStateMachine(StateMachine::COMMENT_GUTS);
	
#line 227 "SteelScanner.cpp"

                }
                break;

                case 4:
                {

#line 144 "steel.reflex"

		m_line++;
	
#line 239 "SteelScanner.cpp"

                }
                break;

                case 5:
                {

#line 149 "steel.reflex"

		// Eat the comment
	
#line 251 "SteelScanner.cpp"

                }
                break;

                case 6:
                {

#line 154 "steel.reflex"

		// Eat it
	 
#line 263 "SteelScanner.cpp"

                }
                break;

                case 7:
                {

#line 159 "steel.reflex"

		m_token = new AstString(m_line,m_script_name);
		
		SwitchToStateMachine(StateMachine::STRING_LITERAL_GUTS);
	
#line 277 "SteelScanner.cpp"

                }
                break;

                case 8:
                {

#line 166 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::BOOLEAN, new AstBoolean(m_line,m_script_name,true)) ;
	
#line 289 "SteelScanner.cpp"

                }
                break;

                case 9:
                {

#line 171 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::BOOLEAN, new AstBoolean(m_line,m_script_name,false));
	
#line 301 "SteelScanner.cpp"

                }
                break;

                case 10:
                {

#line 176 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::POP,NULL);
	
#line 313 "SteelScanner.cpp"

                }
                break;

                case 11:
                {

#line 181 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::IMPORT,NULL);
	
#line 325 "SteelScanner.cpp"

                }
                break;

                case 12:
                {

#line 186 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::CASE,NULL);
	
#line 337 "SteelScanner.cpp"

                }
                break;

                case 13:
                {

#line 191 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::CASE_DELIM,NULL);
	
#line 349 "SteelScanner.cpp"

                }
                break;

                case 14:
                {

#line 196 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::SWITCH,NULL);
	
#line 361 "SteelScanner.cpp"

                }
                break;

                case 15:
                {

#line 201 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::DEFAULT,NULL);
	
#line 373 "SteelScanner.cpp"

                }
                break;

                case 16:
                {

#line 206 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::SCOPE,NULL);
	
#line 385 "SteelScanner.cpp"

                }
                break;

                case 17:
                {

#line 211 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::DECREMENT,NULL);
	
#line 397 "SteelScanner.cpp"

                }
                break;

                case 18:
                {

#line 216 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::INCREMENT,NULL);
	
#line 409 "SteelScanner.cpp"

                }
                break;

                case 19:
                {

#line 221 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::INT,new AstInteger(m_line,m_script_name,ToInt(accepted_string)));
	
#line 421 "SteelScanner.cpp"

                }
                break;

                case 20:
                {

#line 226 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::INT,new AstInteger(m_line,m_script_name,ToIntFromHex(accepted_string)));
	
#line 433 "SteelScanner.cpp"

                }
                break;

                case 21:
                {

#line 231 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::FLOAT, new AstFloat(m_line,m_script_name,ToFloat(accepted_string)));
	
#line 445 "SteelScanner.cpp"

                }
                break;

                case 22:
                {

#line 236 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::VAR_IDENTIFIER,new AstVarIdentifier(m_line,m_script_name,accepted_string));		
	
#line 457 "SteelScanner.cpp"

                }
                break;

                case 23:
                {

#line 241 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::ARRAY_IDENTIFIER, new AstArrayIdentifier(m_line,m_script_name,accepted_string));
	
#line 469 "SteelScanner.cpp"

                }
                break;

                case 24:
                {

#line 246 "steel.reflex"

		return SteelParser::Token((SteelParser::Terminal::Name)accepted_string[0],NULL);
	
#line 481 "SteelScanner.cpp"

                }
                break;

                case 25:
                {

#line 251 "steel.reflex"

		return SteelParser::Token((SteelParser::Terminal::Name)accepted_string[0],NULL);
	
#line 493 "SteelScanner.cpp"

                }
                break;

                case 26:
                {

#line 256 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::LTE,NULL);
	
#line 505 "SteelScanner.cpp"

                }
                break;

                case 27:
                {

#line 261 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::GTE,NULL);
	
#line 517 "SteelScanner.cpp"

                }
                break;

                case 28:
                {

#line 266 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::NE,NULL);
	
#line 529 "SteelScanner.cpp"

                }
                break;

                case 29:
                {

#line 271 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::EQ,NULL);
	 
#line 541 "SteelScanner.cpp"

                }
                break;

                case 30:
                {

#line 276 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::LT,NULL);
	
#line 553 "SteelScanner.cpp"

                }
                break;

                case 31:
                {

#line 281 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::GT,NULL);
	
#line 565 "SteelScanner.cpp"

                }
                break;

                case 32:
                {

#line 286 "steel.reflex"
 
		 return SteelParser::Token(SteelParser::Terminal::D,NULL);
	 
#line 577 "SteelScanner.cpp"

                }
                break;

                case 33:
                {

#line 291 "steel.reflex"
 
		 return SteelParser::Token(SteelParser::Terminal::AND,NULL);
	 
#line 589 "SteelScanner.cpp"

                }
                break;

                case 34:
                {

#line 296 "steel.reflex"
 
		 return SteelParser::Token(SteelParser::Terminal::OR,NULL);
	 
#line 601 "SteelScanner.cpp"

                }
                break;

                case 35:
                {

#line 301 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::NOT,NULL);
	
#line 613 "SteelScanner.cpp"

                }
                break;

                case 36:
                {

#line 306 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::WHILE,NULL);
	
#line 625 "SteelScanner.cpp"

                }
                break;

                case 37:
                {

#line 311 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::DO,NULL);
	
#line 637 "SteelScanner.cpp"

                }
                break;

                case 38:
                {

#line 316 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::FOR,NULL);
	
#line 649 "SteelScanner.cpp"

                }
                break;

                case 39:
                {

#line 321 "steel.reflex"
 
		 return SteelParser::Token(SteelParser::Terminal::BREAK,NULL);
	
#line 661 "SteelScanner.cpp"

                }
                break;

                case 40:
                {

#line 326 "steel.reflex"
 
		 return SteelParser::Token(SteelParser::Terminal::CONTINUE,NULL);
	
#line 673 "SteelScanner.cpp"

                }
                break;

                case 41:
                {

#line 331 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::IF,NULL);
	
#line 685 "SteelScanner.cpp"

                }
                break;

                case 42:
                {

#line 336 "steel.reflex"

		 return SteelParser::Token(SteelParser::Terminal::ELSE,NULL);
	
#line 697 "SteelScanner.cpp"

                }
                break;

                case 43:
                {

#line 341 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::RETURN,NULL);
	
#line 709 "SteelScanner.cpp"

                }
                break;

                case 44:
                {

#line 346 "steel.reflex"
 
		return SteelParser::Token(SteelParser::Terminal::FUNCTION,NULL);
	
#line 721 "SteelScanner.cpp"

                }
                break;

                case 45:
                {

#line 351 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::FINAL,NULL);
	
#line 733 "SteelScanner.cpp"

                }
                break;

                case 46:
                {

#line 356 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::VAR,NULL);
	
#line 745 "SteelScanner.cpp"

                }
                break;

                case 47:
                {

#line 361 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::CONSTANT,NULL);
	
#line 757 "SteelScanner.cpp"

                }
                break;

                case 48:
                {

#line 366 "steel.reflex"

		return SteelParser::Token(SteelParser::Terminal::BAREWORD,new AstFuncIdentifier(m_line,m_script_name,accepted_string));
	
#line 769 "SteelScanner.cpp"

                }
                break;

                case 49:
                {

#line 389 "steel.reflex"

		// First, add the accepted_string to the string..
		AstString *pString = (AstString*)m_token;		
		pString->addChar(accepted_string[0]);
	
#line 783 "SteelScanner.cpp"

                }
                break;

                case 50:
                {

#line 397 "steel.reflex"
 
		AstString *pString = (AstString*)m_token;

		SwitchToStateMachine(StateMachine::MAIN);
		return SteelParser::Token(SteelParser::Terminal::STRING,m_token);
	
#line 798 "SteelScanner.cpp"

                }
                break;

                case 51:
                {

#line 405 "steel.reflex"

		// Error
	
#line 810 "SteelScanner.cpp"

                }
                break;

                default: assert(false && "this should never happen"); break;
            }
        }
    }

}

// ///////////////////////////////////////////////////////////////////////
// begin internal reflex-generated parser guts -- don't use
// ///////////////////////////////////////////////////////////////////////

bool SteelScanner::IsInputAtEnd_ () throw()
{

#line 119 "steel.reflex"


	return (m_pBuffer[m_char_cursor] == '\0');

#line 834 "SteelScanner.cpp"
}

BarfCpp_::Uint8 SteelScanner::ReadNextAtom_ () throw()
{

#line 110 "steel.reflex"


	if( m_pBuffer[m_char_cursor] == '\0')
		return '\n';
	else
		return m_pBuffer[m_char_cursor++];


#line 849 "SteelScanner.cpp"
}

void SteelScanner::PrintAtom_ (BarfCpp_::Uint8 atom)
{
    if (atom == '\\')                    std::cerr << "\\\\";
    else if (atom == '"')                std::cerr << "\\\"";
    else if (atom >= ' ' && atom <= '~') std::cerr << atom;
    else if (atom == '\n')               std::cerr << "\\n";
    else if (atom == '\t')               std::cerr << "\\t";
    else if (atom == '\0')               std::cerr << "\\0";
    else
    {
        std::cerr.width(2);
        std::cerr << "\\x" << std::hex << std::uppercase << BarfCpp_::Uint16(atom);
        std::cerr.width(1);
    }
}

void SteelScanner::PrintString_ (std::string const &s)
{
    // save the existing std::cerr properties for later restoration
    std::ios_base::fmtflags saved_stream_flags = std::cerr.flags();
    char saved_stream_fill = std::cerr.fill();
    std::streamsize saved_stream_width = std::cerr.width();
    std::streamsize saved_stream_precision = std::cerr.precision();

    // clear all format flags to a neutral state
    std::cerr.unsetf(
        std::ios_base::boolalpha|std::ios_base::dec|std::ios_base::fixed|
        std::ios_base::hex|std::ios_base::internal|std::ios_base::left|
        std::ios_base::oct|std::ios_base::right|std::ios_base::scientific|
        std::ios_base::showbase|std::ios_base::showpoint|std::ios_base::showpos|
        std::ios_base::skipws|std::ios_base::unitbuf|std::ios_base::uppercase|
        std::ios_base::adjustfield|std::ios_base::basefield|std::ios_base::floatfield);
    // the '0' char is used hex escape chars, which always have width 2
    std::cerr.fill('0');

    std::cerr << '"';
    for (std::string::size_type i = 0; i < s.size(); ++i)
        PrintAtom_(s[i]);
    std::cerr << '"';

    // restore the saved std::cerr properties
    std::cerr.setf(saved_stream_flags);
    std::cerr.fill(saved_stream_fill);
    std::cerr.width(saved_stream_width);
    std::cerr.precision(saved_stream_precision);
}

BarfCpp_::Uint32 const SteelScanner::ms_state_machine_start_state_index_[] =
{
    0,
    10,
    145,
};
BarfCpp_::Uint8 const SteelScanner::ms_state_machine_mode_flags_[] =
{
    2,
    0,
    0,
};
char const *const SteelScanner::ms_state_machine_name_[] =
{
    "COMMENT_GUTS",
    "MAIN",
    "STRING_LITERAL_GUTS",
};
BarfCpp_::Uint32 const SteelScanner::ms_state_machine_count_ = sizeof(SteelScanner::ms_state_machine_name_) / sizeof(*SteelScanner::ms_state_machine_name_);

// the order of the states indicates priority (only for accept states).
// the lower the state's index in this array, the higher its priority.
ReflexCpp_::AutomatonApparatus_::DfaState_ const SteelScanner::ms_state_table_[] =
{
    { 52, 2, ms_transition_table_+0 },
    { 52, 3, ms_transition_table_+2 },
    { 52, 2, ms_transition_table_+5 },
    { 1, 3, ms_transition_table_+7 },
    { 52, 2, ms_transition_table_+10 },
    { 52, 5, ms_transition_table_+12 },
    { 0, 2, ms_transition_table_+17 },
    { 0, 3, ms_transition_table_+19 },
    { 0, 3, ms_transition_table_+22 },
    { 1, 5, ms_transition_table_+25 },
    { 52, 2, ms_transition_table_+30 },
    { 52, 48, ms_transition_table_+32 },
    { 6, 2, ms_transition_table_+80 },
    { 4, 0, ms_transition_table_+82 },
    { 35, 1, ms_transition_table_+82 },
    { 28, 0, ms_transition_table_+83 },
    { 7, 0, ms_transition_table_+83 },
    { 25, 3, ms_transition_table_+83 },
    { 22, 4, ms_transition_table_+86 },
    { 25, 0, ms_transition_table_+90 },
    { 52, 1, ms_transition_table_+90 },
    { 33, 0, ms_transition_table_+91 },
    { 25, 1, ms_transition_table_+91 },
    { 18, 0, ms_transition_table_+92 },
    { 25, 1, ms_transition_table_+92 },
    { 17, 0, ms_transition_table_+93 },
    { 25, 2, ms_transition_table_+93 },
    { 3, 0, ms_transition_table_+95 },
    { 5, 2, ms_transition_table_+95 },
    { 19, 3, ms_transition_table_+97 },
    { 52, 1, ms_transition_table_+100 },
    { 21, 1, ms_transition_table_+101 },
    { 52, 2, ms_transition_table_+102 },
    { 52, 3, ms_transition_table_+104 },
    { 20, 3, ms_transition_table_+107 },
    { 19, 2, ms_transition_table_+110 },
    { 13, 1, ms_transition_table_+112 },
    { 16, 0, ms_transition_table_+113 },
    { 24, 0, ms_transition_table_+113 },
    { 30, 1, ms_transition_table_+113 },
    { 26, 0, ms_transition_table_+114 },
    { 25, 1, ms_transition_table_+114 },
    { 29, 0, ms_transition_table_+115 },
    { 31, 1, ms_transition_table_+115 },
    { 27, 0, ms_transition_table_+116 },
    { 25, 3, ms_transition_table_+116 },
    { 23, 4, ms_transition_table_+119 },
    { 48, 4, ms_transition_table_+123 },
    { 48, 6, ms_transition_table_+127 },
    { 48, 6, ms_transition_table_+133 },
    { 33, 4, ms_transition_table_+139 },
    { 48, 6, ms_transition_table_+143 },
    { 48, 6, ms_transition_table_+149 },
    { 48, 5, ms_transition_table_+155 },
    { 48, 6, ms_transition_table_+160 },
    { 39, 4, ms_transition_table_+166 },
    { 48, 7, ms_transition_table_+170 },
    { 48, 6, ms_transition_table_+177 },
    { 48, 6, ms_transition_table_+183 },
    { 12, 4, ms_transition_table_+189 },
    { 48, 6, ms_transition_table_+193 },
    { 48, 7, ms_transition_table_+199 },
    { 48, 6, ms_transition_table_+206 },
    { 47, 4, ms_transition_table_+212 },
    { 48, 6, ms_transition_table_+216 },
    { 48, 6, ms_transition_table_+222 },
    { 48, 6, ms_transition_table_+228 },
    { 48, 6, ms_transition_table_+234 },
    { 40, 4, ms_transition_table_+240 },
    { 32, 8, ms_transition_table_+244 },
    { 48, 8, ms_transition_table_+252 },
    { 48, 6, ms_transition_table_+260 },
    { 48, 5, ms_transition_table_+266 },
    { 48, 6, ms_transition_table_+271 },
    { 48, 6, ms_transition_table_+277 },
    { 46, 4, ms_transition_table_+283 },
    { 48, 5, ms_transition_table_+287 },
    { 48, 6, ms_transition_table_+292 },
    { 48, 6, ms_transition_table_+298 },
    { 48, 6, ms_transition_table_+304 },
    { 15, 4, ms_transition_table_+310 },
    { 37, 4, ms_transition_table_+314 },
    { 48, 6, ms_transition_table_+318 },
    { 48, 6, ms_transition_table_+324 },
    { 48, 6, ms_transition_table_+330 },
    { 42, 4, ms_transition_table_+336 },
    { 48, 11, ms_transition_table_+340 },
    { 48, 6, ms_transition_table_+351 },
    { 48, 6, ms_transition_table_+357 },
    { 48, 6, ms_transition_table_+363 },
    { 9, 4, ms_transition_table_+369 },
    { 48, 6, ms_transition_table_+373 },
    { 48, 5, ms_transition_table_+379 },
    { 48, 6, ms_transition_table_+384 },
    { 45, 4, ms_transition_table_+390 },
    { 48, 6, ms_transition_table_+394 },
    { 38, 4, ms_transition_table_+400 },
    { 48, 6, ms_transition_table_+404 },
    { 48, 6, ms_transition_table_+410 },
    { 48, 6, ms_transition_table_+416 },
    { 48, 6, ms_transition_table_+422 },
    { 48, 6, ms_transition_table_+428 },
    { 48, 6, ms_transition_table_+434 },
    { 44, 4, ms_transition_table_+440 },
    { 48, 6, ms_transition_table_+444 },
    { 41, 4, ms_transition_table_+450 },
    { 48, 6, ms_transition_table_+454 },
    { 48, 6, ms_transition_table_+460 },
    { 35, 4, ms_transition_table_+466 },
    { 48, 6, ms_transition_table_+470 },
    { 34, 4, ms_transition_table_+476 },
    { 48, 6, ms_transition_table_+480 },
    { 48, 6, ms_transition_table_+486 },
    { 10, 4, ms_transition_table_+492 },
    { 48, 6, ms_transition_table_+496 },
    { 48, 6, ms_transition_table_+502 },
    { 48, 6, ms_transition_table_+508 },
    { 48, 6, ms_transition_table_+514 },
    { 48, 6, ms_transition_table_+520 },
    { 43, 4, ms_transition_table_+526 },
    { 48, 6, ms_transition_table_+530 },
    { 48, 6, ms_transition_table_+536 },
    { 48, 6, ms_transition_table_+542 },
    { 48, 6, ms_transition_table_+548 },
    { 48, 6, ms_transition_table_+554 },
    { 14, 4, ms_transition_table_+560 },
    { 48, 6, ms_transition_table_+564 },
    { 48, 6, ms_transition_table_+570 },
    { 48, 6, ms_transition_table_+576 },
    { 8, 4, ms_transition_table_+582 },
    { 48, 6, ms_transition_table_+586 },
    { 48, 6, ms_transition_table_+592 },
    { 48, 6, ms_transition_table_+598 },
    { 48, 6, ms_transition_table_+604 },
    { 11, 4, ms_transition_table_+610 },
    { 48, 5, ms_transition_table_+614 },
    { 48, 6, ms_transition_table_+619 },
    { 48, 6, ms_transition_table_+625 },
    { 48, 6, ms_transition_table_+631 },
    { 48, 6, ms_transition_table_+637 },
    { 48, 6, ms_transition_table_+643 },
    { 36, 4, ms_transition_table_+649 },
    { 52, 1, ms_transition_table_+653 },
    { 34, 0, ms_transition_table_+654 },
    { 2, 48, ms_transition_table_+654 },
    { 52, 2, ms_transition_table_+702 },
    { 52, 3, ms_transition_table_+704 },
    { 49, 0, ms_transition_table_+707 },
    { 50, 0, ms_transition_table_+707 },
    { 51, 3, ms_transition_table_+707 }
};
BarfCpp_::Size const SteelScanner::ms_state_count_ = sizeof(SteelScanner::ms_state_table_) / sizeof(*SteelScanner::ms_state_table_);

ReflexCpp_::AutomatonApparatus_::DfaTransition_ const SteelScanner::ms_transition_table_[] =
{
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+1 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+3 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+1 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+3 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+5 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+9 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 47, 0, ms_state_table_+6 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 46, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+7 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+8 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+4 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 47, 0, ms_state_table_+6 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 41, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 43, 46, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 255, ms_state_table_+2 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+11 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+144 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 9, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 10, 0, ms_state_table_+13 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 32, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 33, 0, ms_state_table_+14 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 34, 0, ms_state_table_+16 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 36, 0, ms_state_table_+17 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 37, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 38, 0, ms_state_table_+20 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 43, 0, ms_state_table_+22 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 44, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 45, 0, ms_state_table_+24 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 47, 0, ms_state_table_+26 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 48, 0, ms_state_table_+29 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 58, 0, ms_state_table_+36 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 59, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 60, 0, ms_state_table_+39 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+41 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 62, 0, ms_state_table_+43 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 64, 0, ms_state_table_+45 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 91, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+48 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 98, 0, ms_state_table_+51 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 99, 0, ms_state_table_+56 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 100, 0, ms_state_table_+69 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+82 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 102, 0, ms_state_table_+86 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+104 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+106 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+109 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 112, 0, ms_state_table_+111 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 113, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+114 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+120 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+126 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+130 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 118, 0, ms_state_table_+135 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 119, 0, ms_state_table_+137 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 123, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 124, 0, ms_state_table_+142 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 125, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 40, 42, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 49, 57, ms_state_table_+35 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 93, 94, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 103, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 120, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 9, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 32, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+15 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+18 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 38, 0, ms_state_table_+21 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 43, 0, ms_state_table_+23 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 45, 0, ms_state_table_+25 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 42, 0, ms_state_table_+27 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 47, 0, ms_state_table_+28 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 9, ms_state_table_+28 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 11, 255, ms_state_table_+28 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 46, 0, ms_state_table_+30 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 120, 0, ms_state_table_+33 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+32 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+31 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+31 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 46, 0, ms_state_table_+30 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+32 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 70, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 102, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 70, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 102, ms_state_table_+34 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 46, 0, ms_state_table_+30 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+35 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 58, 0, ms_state_table_+37 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+40 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+42 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+44 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+46 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+49 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 100, 0, ms_state_table_+50 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 99, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 101, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+52 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+53 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+54 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 107, 0, ms_state_table_+55 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 106, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 108, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+57 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+60 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+58 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 114, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 116, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+59 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+61 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+62 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+64 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 114, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+63 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+65 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+66 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+67 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 116, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 118, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+68 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+70 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+81 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 99, 0, ms_state_table_+71 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 102, 0, ms_state_table_+76 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 98, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 100, 101, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 103, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+72 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+73 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+74 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+75 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+77 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+78 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 116, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 118, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+79 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+80 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+83 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+84 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 114, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 116, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+85 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+87 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+91 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+95 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+97 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 116, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 118, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+88 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+89 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 114, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 116, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+90 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+92 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+93 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+94 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+96 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+98 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 99, 0, ms_state_table_+99 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 98, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 100, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+100 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+101 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+102 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+103 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 102, 0, ms_state_table_+105 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 101, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 103, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+107 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+108 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+110 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+112 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 110, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 112, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 112, 0, ms_state_table_+113 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 111, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 113, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+115 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+116 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+117 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 116, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 118, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+118 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+119 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 119, 0, ms_state_table_+121 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 118, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 120, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+122 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+123 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 115, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 117, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 99, 0, ms_state_table_+124 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 98, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 100, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 104, 0, ms_state_table_+125 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 103, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 105, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+127 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+128 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 116, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 118, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+129 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+131 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 114, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 116, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+132 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+133 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 111, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 103, 0, ms_state_table_+134 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 102, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 104, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+136 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 98, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+75 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 113, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 115, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 104, 0, ms_state_table_+138 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 103, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 105, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+139 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 108, 0, ms_state_table_+140 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 107, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 109, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+141 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 100, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 102, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 48, 57, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 97, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 124, 0, ms_state_table_+143 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 9, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 10, 0, ms_state_table_+13 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 32, 0, ms_state_table_+12 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 33, 0, ms_state_table_+14 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 34, 0, ms_state_table_+16 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 36, 0, ms_state_table_+17 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 37, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 38, 0, ms_state_table_+20 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 43, 0, ms_state_table_+22 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 44, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 45, 0, ms_state_table_+24 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 47, 0, ms_state_table_+26 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 48, 0, ms_state_table_+29 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 58, 0, ms_state_table_+36 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 59, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 60, 0, ms_state_table_+39 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 61, 0, ms_state_table_+41 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 62, 0, ms_state_table_+43 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 64, 0, ms_state_table_+45 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 91, 0, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 95, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 97, 0, ms_state_table_+48 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 98, 0, ms_state_table_+51 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 99, 0, ms_state_table_+56 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 100, 0, ms_state_table_+69 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 101, 0, ms_state_table_+82 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 102, 0, ms_state_table_+86 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 105, 0, ms_state_table_+104 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 110, 0, ms_state_table_+106 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 111, 0, ms_state_table_+109 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 112, 0, ms_state_table_+111 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 113, 0, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 114, 0, ms_state_table_+114 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 115, 0, ms_state_table_+120 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 116, 0, ms_state_table_+126 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 117, 0, ms_state_table_+130 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 118, 0, ms_state_table_+135 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 119, 0, ms_state_table_+137 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 123, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 124, 0, ms_state_table_+142 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 125, 0, ms_state_table_+38 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 40, 42, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 49, 57, ms_state_table_+35 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 65, 90, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 93, 94, ms_state_table_+19 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 103, 104, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 106, 109, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 120, 122, ms_state_table_+47 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 0, ms_state_table_+146 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::CONDITIONAL, 2, 2, ms_state_table_+149 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 34, 0, ms_state_table_+148 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 33, ms_state_table_+147 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 35, 255, ms_state_table_+147 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM, 34, 0, ms_state_table_+148 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 1, 33, ms_state_table_+147 },
    { ReflexCpp_::AutomatonApparatus_::DfaTransition_::INPUT_ATOM_RANGE, 35, 255, ms_state_table_+147 }
};
BarfCpp_::Size const SteelScanner::ms_transition_count_ = sizeof(SteelScanner::ms_transition_table_) / sizeof(*SteelScanner::ms_transition_table_);

char const *const SteelScanner::ms_accept_handler_regex_[] =
{
    "(\\n|.)*[*]/",
    "(\\n|.)*\\z",
    "\\z",
    "/[*]",
    "\\n",
    "//.*",
    "[\\t ]+",
    "\"",
    "true",
    "false",
    "pop",
    "using",
    "case",
    ":",
    "switch",
    "default",
    "::",
    "\\-\\-",
    "\\+\\+",
    "0|[1-9][0-9]*",
    "0x[0-9a-fA-F]+",
    "[0-9]+\\.[0-9]+",
    "\\$[a-zA-Z_][a-zA-Z0-9_]*",
    "@[a-zA-Z_][a-zA-Z0-9_]*",
    ";|\\{|\\}",
    "@|\\$|\\(|\\)|,|%|\\+|\\-|\\^|\\*|\\=|\\[|\\]|/",
    "<=",
    ">=",
    "!=",
    "==",
    "<",
    ">",
    "d",
    "and|&&",
    "or|\\|\\|",
    "not|!",
    "while",
    "do",
    "for",
    "break",
    "continue",
    "if",
    "else",
    "return",
    "function",
    "final",
    "var|declare",
    "const",
    "[a-zA-Z_][a-zA-Z0-9_]*",
    "[^\"]",
    "\"",
    "\\z"
};
BarfCpp_::Uint32 const SteelScanner::ms_accept_handler_count_ = sizeof(SteelScanner::ms_accept_handler_regex_) / sizeof(*SteelScanner::ms_accept_handler_regex_);

// ///////////////////////////////////////////////////////////////////////
// end of internal reflex-generated parser guts
// ///////////////////////////////////////////////////////////////////////


#line 50 "steel.reflex"

void SteelScanner::setBuffer(const char * pBuffer, const std::string &name)
{
	assert ( NULL != pBuffer );
	m_char_cursor = 0;
	m_line = 1;
	m_pBuffer = pBuffer;
	m_script_name = name;
}
int SteelScanner::ToInt(const std::string &text)
{
	std::istringstream str(text);
	int i;
	str >> i;

	return i;
}

double SteelScanner::ToFloat(const std::string &text)
{
	std::istringstream str(text);
	double d;
	str >> d;

	return d;
}

int SteelScanner::ToIntFromHex(const std::string &text)
{
	std::istringstream str(text);
	int i;

	str >> std::hex >> i;
	return i;
}


#line 1891 "SteelScanner.cpp"
